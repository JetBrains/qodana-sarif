{
  "$schema": "https://raw.githubusercontent.com/schemastore/schemastore/master/src/schemas/json/sarif-2.1.0-rtm.5.json",
  "version": "2.1.0",
  "runs": [
    {
      "invocations": [
        {
          "exitCode": 0,
          "toolExecutionNotifications": [
            {
              "message": {
                "text": "Reporting from [] 'sanity' inspections was suspended due to high problems count."
              },
              "level": "error"
            }
          ],
          "executionSuccessful": true
        }
      ],
      "language": "en-US",
      "versionControlProvenance": [
        {
          "repositoryUri": "https://github.com/avafanasiev/junit5.git",
          "revisionId": "e5f35c7b9a594bb8f000b220e9bb7ee2ed7e91b3",
          "branch": "master",
          "properties": {
            "lastAuthorName": "Alexey Afanasiev",
            "vcsType": "Git",
            "lastAuthorEmail": "megabochka@gmail.com",
            "tags": [
              "lastAuthorEmail",
              "lastAuthorName",
              "vcsType"
            ]
          }
        }
      ],
      "results": [
        {
          "ruleId": "OptionalUsedAsFieldOrParameterType",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "'Optional' used as type for field 'reason'",
            "markdown": "`Optional` used as type for field 'reason'"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "junit-jupiter-api/src/main/java/org/junit/jupiter/api/extension/ConditionEvaluationResult.java",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 66,
                  "startColumn": 16,
                  "charOffset": 2075,
                  "charLength": 16,
                  "snippet": {
                    "text": "Optional<String>"
                  },
                  "sourceLanguage": "JAVA"
                },
                "contextRegion": {
                  "startLine": 64,
                  "startColumn": 1,
                  "charOffset": 2027,
                  "charLength": 142,
                  "snippet": {
                    "text": "\tprivate final boolean enabled;\n\n\tprivate final Optional<String> reason;\n\n\tprivate ConditionEvaluationResult(boolean enabled, String reason) {"
                  }
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "junit5.junit-jupiter-api.main",
                  "kind": "module"
                }
              ]
            }
          ],
          "partialFingerprints": {
            "equalIndicator/v1": "0651536d8bd197ad423cc16bd049881b74206170c319933f1cc740158a0250a9"
          },
          "baselineState": "unchanged",
          "properties": {
            "ideaSeverity": "WARNING",
            "tags": [
              "ideaSeverity"
            ]
          }
        },
        {
          "ruleId": "OptionalUsedAsFieldOrParameterType",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "'Optional' used as type for parameter 'reason'",
            "markdown": "`Optional` used as type for parameter 'reason'"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "junit-jupiter-api/src/main/java/org/junit/jupiter/api/extension/TestWatcher.java",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 61,
                  "startColumn": 54,
                  "charOffset": 2360,
                  "charLength": 16,
                  "snippet": {
                    "text": "Optional<String>"
                  },
                  "sourceLanguage": "JAVA"
                },
                "contextRegion": {
                  "startLine": 59,
                  "startColumn": 1,
                  "charOffset": 2271,
                  "charLength": 132,
                  "snippet": {
                    "text": "\t * potentially <em>empty</em>\n\t */\n\tdefault void testDisabled(ExtensionContext context, Optional<String> reason) {\n\t\t/* no-op */\n\t}"
                  }
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "junit5.junit-jupiter-api.main",
                  "kind": "module"
                }
              ]
            }
          ],
          "partialFingerprints": {
            "equalIndicator/v1": "6f28a5d48ae1561fd0875ec85f15fcbb75d97b1ed0c711443498e64b9148715a"
          },
          "baselineState": "unchanged",
          "properties": {
            "ideaSeverity": "WARNING",
            "tags": [
              "ideaSeverity"
            ]
          }
        },
        {
          "ruleId": "OptionalUsedAsFieldOrParameterType",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "'Optional' used as type for parameter 'testDescriptor'",
            "markdown": "`Optional` used as type for parameter 'testDescriptor'"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "junit-jupiter-engine/src/main/java/org/junit/jupiter/engine/discovery/ClassSelectorResolver.java",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 129,
                  "startColumn": 34,
                  "charOffset": 5622,
                  "charLength": 44,
                  "snippet": {
                    "text": "Optional<? extends ClassBasedTestDescriptor>"
                  },
                  "sourceLanguage": "JAVA"
                },
                "contextRegion": {
                  "startLine": 127,
                  "startColumn": 1,
                  "charOffset": 5585,
                  "charLength": 178,
                  "snippet": {
                    "text": "\t}\n\n\tprivate Resolution toResolution(Optional<? extends ClassBasedTestDescriptor> testDescriptor) {\n\t\treturn testDescriptor.map(it -> {\n\t\t\tClass<?> testClass = it.getTestClass();"
                  }
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "junit5.junit-jupiter-engine.main",
                  "kind": "module"
                }
              ]
            }
          ],
          "partialFingerprints": {
            "equalIndicator/v1": "fcf9dc427a244553ffdb22539bf1454784f6d4c3597e645ee8e1e332e1a32c57"
          },
          "baselineState": "unchanged",
          "properties": {
            "ideaSeverity": "WARNING",
            "tags": [
              "ideaSeverity"
            ]
          }
        },
        {
          "ruleId": "OptionalUsedAsFieldOrParameterType",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "'Optional used as type for parameter 'target''",
            "markdown": "`Optional` used as type for parameter 'target'"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "junit-jupiter-engine/src/main/java/org/junit/jupiter/engine/execution/ExecutableInvoker.java",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 164,
                  "startColumn": 60,
                  "charOffset": 7627,
                  "charLength": 16,
                  "snippet": {
                    "text": "Optional<Object>"
                  },
                  "sourceLanguage": "JAVA"
                },
                "contextRegion": {
                  "startLine": 162,
                  "startColumn": 1,
                  "charOffset": 7503,
                  "charLength": 258,
                  "snippet": {
                    "text": "\t * invocation; never {@code null} though potentially empty\n\t */\n\tprivate Object[] resolveParameters(Executable executable, Optional<Object> target, Optional<Object> outerInstance,\n\t\t\tExtensionContext extensionContext, ExtensionRegistry extensionRegistry) {\n"
                  }
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "junit5.junit-jupiter-engine.main",
                  "kind": "module"
                }
              ]
            }
          ],
          "partialFingerprints": {
            "equalIndicator/v1": "cd9ec1aa595b77d6c4f1ad98f1d308cbaf0b023fd66102d071f5fee205d1d5f8"
          },
          "baselineState": "unchanged",
          "properties": {
            "ideaSeverity": "WARNING",
            "tags": [
              "ideaSeverity"
            ]
          }
        },
        {
          "ruleId": "OptionalUsedAsFieldOrParameterType",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "'Optional used as type for parameter 'outerInstance''",
            "markdown": "`Optional` used as type for parameter 'outerInstance'"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "junit-jupiter-engine/src/main/java/org/junit/jupiter/engine/execution/ExecutableInvoker.java",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 164,
                  "startColumn": 85,
                  "charOffset": 7652,
                  "charLength": 16,
                  "snippet": {
                    "text": "Optional<Object>"
                  },
                  "sourceLanguage": "JAVA"
                },
                "contextRegion": {
                  "startLine": 162,
                  "startColumn": 1,
                  "charOffset": 7503,
                  "charLength": 258,
                  "snippet": {
                    "text": "\t * invocation; never {@code null} though potentially empty\n\t */\n\tprivate Object[] resolveParameters(Executable executable, Optional<Object> target, Optional<Object> outerInstance,\n\t\t\tExtensionContext extensionContext, ExtensionRegistry extensionRegistry) {\n"
                  }
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "junit5.junit-jupiter-engine.main",
                  "kind": "module"
                }
              ]
            }
          ],
          "partialFingerprints": {
            "equalIndicator/v1": "f47fec1d4544cc169d7dbcea82a93b4ba8a87ba35cce4e21c0133127d22d7627"
          },
          "baselineState": "unchanged",
          "properties": {
            "ideaSeverity": "WARNING",
            "tags": [
              "ideaSeverity"
            ]
          }
        },
        {
          "ruleId": "OptionalUsedAsFieldOrParameterType",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "'Optional used as type for parameter 'outerInstance''",
            "markdown": "`Optional` used as type for parameter 'outerInstance'"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "junit-jupiter-engine/src/main/java/org/junit/jupiter/engine/execution/ExecutableInvoker.java",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 71,
                  "startColumn": 50,
                  "charOffset": 2939,
                  "charLength": 16,
                  "snippet": {
                    "text": "Optional<Object>"
                  },
                  "sourceLanguage": "JAVA"
                },
                "contextRegion": {
                  "startLine": 69,
                  "startColumn": 1,
                  "charOffset": 2867,
                  "charLength": 243,
                  "snippet": {
                    "text": "\t * interceptors}\n\t */\n\tpublic <T> T invoke(Constructor<T> constructor, Optional<Object> outerInstance, ExtensionContext extensionContext,\n\t\t\tExtensionRegistry extensionRegistry, ReflectiveInterceptorCall<Constructor<T>, T> interceptorCall) {\n"
                  }
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "junit5.junit-jupiter-engine.main",
                  "kind": "module"
                }
              ]
            }
          ],
          "partialFingerprints": {
            "equalIndicator/v1": "26ff9825f9bc7ad880a78210dcf530a66e07a73cf71652dd16afa0a806679b26"
          },
          "baselineState": "unchanged",
          "properties": {
            "ideaSeverity": "WARNING",
            "tags": [
              "ideaSeverity"
            ]
          }
        },
        {
          "ruleId": "OptionalUsedAsFieldOrParameterType",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "'Optional used as type for parameter 'target''",
            "markdown": "`Optional` used as type for parameter 'target'"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "junit-jupiter-engine/src/main/java/org/junit/jupiter/engine/execution/ExecutableInvoker.java",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 141,
                  "startColumn": 52,
                  "charOffset": 6473,
                  "charLength": 16,
                  "snippet": {
                    "text": "Optional<Object>"
                  },
                  "sourceLanguage": "JAVA"
                },
                "contextRegion": {
                  "startLine": 139,
                  "startColumn": 1,
                  "charOffset": 6357,
                  "charLength": 218,
                  "snippet": {
                    "text": "\t * invocation; never {@code null} though potentially empty\n\t */\n\tprivate Object[] resolveParameters(Method method, Optional<Object> target, ExtensionContext extensionContext,\n\t\t\tExtensionRegistry extensionRegistry) {\n"
                  }
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "junit5.junit-jupiter-engine.main",
                  "kind": "module"
                }
              ]
            }
          ],
          "partialFingerprints": {
            "equalIndicator/v1": "9ebf732252261afebbaca63c6bc6581588886b64e8e8c171454f939d76d564de"
          },
          "baselineState": "unchanged",
          "properties": {
            "ideaSeverity": "WARNING",
            "tags": [
              "ideaSeverity"
            ]
          }
        },
        {
          "ruleId": "OptionalUsedAsFieldOrParameterType",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "'Optional used as type for parameter 'target''",
            "markdown": "`Optional` used as type for parameter 'target'"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "junit-jupiter-engine/src/main/java/org/junit/jupiter/engine/execution/DefaultParameterContext.java",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 37,
                  "startColumn": 58,
                  "charOffset": 1149,
                  "charLength": 16,
                  "snippet": {
                    "text": "Optional<Object>"
                  },
                  "sourceLanguage": "JAVA"
                },
                "contextRegion": {
                  "startLine": 35,
                  "startColumn": 1,
                  "charOffset": 1051,
                  "charLength": 293,
                  "snippet": {
                    "text": "\tprivate final Optional<Object> target;\n\n\tDefaultParameterContext(Parameter parameter, int index, Optional<Object> target) {\n\t\tPreconditions.condition(index >= 0, \"index must be greater than or equal to zero\");\n\t\tthis.parameter = Preconditions.notNull(parameter, \"parameter must not be null\");"
                  }
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "junit5.junit-jupiter-engine.main",
                  "kind": "module"
                }
              ]
            }
          ],
          "partialFingerprints": {
            "equalIndicator/v1": "aa60a9a7b44ba3e73e921eff033cc9a1e19333177602f38928de0ad6712ade7b"
          },
          "baselineState": "unchanged",
          "properties": {
            "ideaSeverity": "WARNING",
            "tags": [
              "ideaSeverity"
            ]
          }
        },
        {
          "ruleId": "OptionalUsedAsFieldOrParameterType",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "'Optional used as type for field 'target''",
            "markdown": "`Optional` used as type for field 'target'"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "junit-jupiter-engine/src/main/java/org/junit/jupiter/engine/execution/DefaultParameterContext.java",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 35,
                  "startColumn": 16,
                  "charOffset": 1066,
                  "charLength": 16,
                  "snippet": {
                    "text": "Optional<Object>"
                  },
                  "sourceLanguage": "JAVA"
                },
                "contextRegion": {
                  "startLine": 33,
                  "startColumn": 1,
                  "charOffset": 989,
                  "charLength": 186,
                  "snippet": {
                    "text": "\tprivate final Parameter parameter;\n\tprivate final int index;\n\tprivate final Optional<Object> target;\n\n\tDefaultParameterContext(Parameter parameter, int index, Optional<Object> target) {"
                  }
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "junit5.junit-jupiter-engine.main",
                  "kind": "module"
                }
              ]
            }
          ],
          "partialFingerprints": {
            "equalIndicator/v1": "5a633c1e6409728b8fcef8bcc7d794a8a2f1eab6ee1fd44f2d6fd340356ca0fc"
          },
          "baselineState": "unchanged",
          "properties": {
            "ideaSeverity": "WARNING",
            "tags": [
              "ideaSeverity"
            ]
          }
        },
        {
          "ruleId": "OptionalUsedAsFieldOrParameterType",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "'Optional used as type for parameter 'target''",
            "markdown": "`Optional` used as type for parameter 'target'"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "junit-jupiter-engine/src/main/java/org/junit/jupiter/engine/execution/MethodInvocation.java",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 30,
                  "startColumn": 34,
                  "charOffset": 958,
                  "charLength": 16,
                  "snippet": {
                    "text": "Optional<Object>"
                  },
                  "sourceLanguage": "JAVA"
                },
                "contextRegion": {
                  "startLine": 28,
                  "startColumn": 1,
                  "charOffset": 887,
                  "charLength": 165,
                  "snippet": {
                    "text": "\tprotected final Object[] arguments;\n\n\tMethodInvocation(Method method, Optional<Object> target, Object[] arguments) {\n\t\tthis.method = method;\n\t\tthis.target = target;"
                  }
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "junit5.junit-jupiter-engine.main",
                  "kind": "module"
                }
              ]
            }
          ],
          "partialFingerprints": {
            "equalIndicator/v1": "d62de96f87175307d98ce3433fb2d01b15f8043a309b64051b36b1c62e012046"
          },
          "baselineState": "unchanged",
          "properties": {
            "ideaSeverity": "WARNING",
            "tags": [
              "ideaSeverity"
            ]
          }
        },
        {
          "ruleId": "OptionalUsedAsFieldOrParameterType",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "'Optional used as type for field 'target''",
            "markdown": "`Optional` used as type for field 'target'"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "junit-jupiter-engine/src/main/java/org/junit/jupiter/engine/execution/MethodInvocation.java",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 27,
                  "startColumn": 18,
                  "charOffset": 862,
                  "charLength": 16,
                  "snippet": {
                    "text": "Optional<Object>"
                  },
                  "sourceLanguage": "JAVA"
                },
                "contextRegion": {
                  "startLine": 25,
                  "startColumn": 1,
                  "charOffset": 812,
                  "charLength": 112,
                  "snippet": {
                    "text": "\n\tprotected final Method method;\n\tprotected final Optional<Object> target;\n\tprotected final Object[] arguments;\n"
                  }
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "junit5.junit-jupiter-engine.main",
                  "kind": "module"
                }
              ]
            }
          ],
          "partialFingerprints": {
            "equalIndicator/v1": "8dcf469275de1585933636d2e0938fa8d81f686f879872565ef2012804b0c5c9"
          },
          "baselineState": "unchanged",
          "properties": {
            "ideaSeverity": "WARNING",
            "tags": [
              "ideaSeverity"
            ]
          }
        },
        {
          "ruleId": "OptionalUsedAsFieldOrParameterType",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "'Optional' used as type for parameter 'optional'",
            "markdown": "`Optional` used as type for parameter 'optional'"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "junit-jupiter-engine/src/main/java/org/junit/jupiter/engine/extension/TestInfoParameterResolver.java",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 87,
                  "startColumn": 37,
                  "charOffset": 2448,
                  "charLength": 11,
                  "snippet": {
                    "text": "Optional<?>"
                  },
                  "sourceLanguage": "JAVA"
                },
                "contextRegion": {
                  "startLine": 85,
                  "startColumn": 1,
                  "charOffset": 2407,
                  "charLength": 127,
                  "snippet": {
                    "text": "\t\t}\n\n\t\tprivate static Object nullSafeGet(Optional<?> optional) {\n\t\t\treturn optional != null ? optional.orElse(null) : null;\n\t\t}"
                  }
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "junit5.junit-jupiter-engine.main",
                  "kind": "module"
                }
              ]
            }
          ],
          "partialFingerprints": {
            "equalIndicator/v1": "82c87f4d6d88d452edcaff4aeb3875675941ebb40ca0f361113f11fc8f35b0bb"
          },
          "baselineState": "unchanged",
          "properties": {
            "ideaSeverity": "WARNING",
            "tags": [
              "ideaSeverity"
            ]
          }
        },
        {
          "ruleId": "OptionalUsedAsFieldOrParameterType",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "'Optional>' used as type for field 'testClass'",
            "markdown": "`Optional`> used as type for field 'testClass'"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "junit-jupiter-engine/src/main/java/org/junit/jupiter/engine/extension/TestInfoParameterResolver.java",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 45,
                  "startColumn": 17,
                  "charOffset": 1410,
                  "charLength": 18,
                  "snippet": {
                    "text": "Optional<Class<?>>"
                  },
                  "sourceLanguage": "JAVA"
                },
                "contextRegion": {
                  "startLine": 43,
                  "startColumn": 1,
                  "charOffset": 1324,
                  "charLength": 161,
                  "snippet": {
                    "text": "\t\tprivate final String displayName;\n\t\tprivate final Set<String> tags;\n\t\tprivate final Optional<Class<?>> testClass;\n\t\tprivate final Optional<Method> testMethod;\n"
                  }
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "junit5.junit-jupiter-engine.main",
                  "kind": "module"
                }
              ]
            }
          ],
          "partialFingerprints": {
            "equalIndicator/v1": "78f0621674ff18ea1624cb0ae69a68616065a132ecde6bc8a0a00f469be9d916"
          },
          "baselineState": "unchanged",
          "properties": {
            "ideaSeverity": "WARNING",
            "tags": [
              "ideaSeverity"
            ]
          }
        },
        {
          "ruleId": "OptionalUsedAsFieldOrParameterType",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "'Optional' used as type for field 'testMethod'",
            "markdown": "`Optional` used as type for field 'testMethod'"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "junit-jupiter-engine/src/main/java/org/junit/jupiter/engine/extension/TestInfoParameterResolver.java",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 46,
                  "startColumn": 17,
                  "charOffset": 1456,
                  "charLength": 16,
                  "snippet": {
                    "text": "Optional<Method>"
                  },
                  "sourceLanguage": "JAVA"
                },
                "contextRegion": {
                  "startLine": 44,
                  "startColumn": 1,
                  "charOffset": 1360,
                  "charLength": 180,
                  "snippet": {
                    "text": "\t\tprivate final Set<String> tags;\n\t\tprivate final Optional<Class<?>> testClass;\n\t\tprivate final Optional<Method> testMethod;\n\n\t\tDefaultTestInfo(ExtensionContext extensionContext) {"
                  }
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "junit5.junit-jupiter-engine.main",
                  "kind": "module"
                }
              ]
            }
          ],
          "partialFingerprints": {
            "equalIndicator/v1": "ce450629c0429cacb2fa57a4f1c3cf39510079e066c351673b1932feafc96246"
          },
          "baselineState": "unchanged",
          "properties": {
            "ideaSeverity": "WARNING",
            "tags": [
              "ideaSeverity"
            ]
          }
        },
        {
          "ruleId": "OptionalUsedAsFieldOrParameterType",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "'Optional used as type for parameter 'outerInstance''",
            "markdown": "`Optional` used as type for parameter 'outerInstance'"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "junit-jupiter-engine/src/main/java/org/junit/jupiter/engine/descriptor/DefaultTestInstanceFactoryContext.java",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 28,
                  "startColumn": 56,
                  "charOffset": 830,
                  "charLength": 16,
                  "snippet": {
                    "text": "Optional<Object>"
                  },
                  "sourceLanguage": "JAVA"
                },
                "contextRegion": {
                  "startLine": 26,
                  "startColumn": 1,
                  "charOffset": 727,
                  "charLength": 204,
                  "snippet": {
                    "text": "\tprivate final Optional<Object> outerInstance;\n\n\tDefaultTestInstanceFactoryContext(Class<?> testClass, Optional<Object> outerInstance) {\n\t\tthis.testClass = testClass;\n\t\tthis.outerInstance = outerInstance;"
                  }
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "junit5.junit-jupiter-engine.main",
                  "kind": "module"
                }
              ]
            }
          ],
          "partialFingerprints": {
            "equalIndicator/v1": "a371997ff534631358a488ec8232c7425aea371fed9a80b334f22b1d7e863be6"
          },
          "baselineState": "unchanged",
          "properties": {
            "ideaSeverity": "WARNING",
            "tags": [
              "ideaSeverity"
            ]
          }
        },
        {
          "ruleId": "OptionalUsedAsFieldOrParameterType",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "'Optional used as type for field 'outerInstance''",
            "markdown": "`Optional` used as type for field 'outerInstance'"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "junit-jupiter-engine/src/main/java/org/junit/jupiter/engine/descriptor/DefaultTestInstanceFactoryContext.java",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 26,
                  "startColumn": 16,
                  "charOffset": 742,
                  "charLength": 16,
                  "snippet": {
                    "text": "Optional<Object>"
                  },
                  "sourceLanguage": "JAVA"
                },
                "contextRegion": {
                  "startLine": 24,
                  "startColumn": 1,
                  "charOffset": 691,
                  "charLength": 172,
                  "snippet": {
                    "text": "\n\tprivate final Class<?> testClass;\n\tprivate final Optional<Object> outerInstance;\n\n\tDefaultTestInstanceFactoryContext(Class<?> testClass, Optional<Object> outerInstance) {"
                  }
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "junit5.junit-jupiter-engine.main",
                  "kind": "module"
                }
              ]
            }
          ],
          "partialFingerprints": {
            "equalIndicator/v1": "432ecd0ace3f3aafadb4a49c73c9435427552265579711a6e3d32a24a4654485"
          },
          "baselineState": "unchanged",
          "properties": {
            "ideaSeverity": "WARNING",
            "tags": [
              "ideaSeverity"
            ]
          }
        },
        {
          "ruleId": "OptionalUsedAsFieldOrParameterType",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "'Optional' used as type for parameter 'outerInstances'",
            "markdown": "`Optional` used as type for parameter 'outerInstances'"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "junit-jupiter-engine/src/main/java/org/junit/jupiter/engine/descriptor/ClassBasedTestDescriptor.java",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 274,
                  "startColumn": 47,
                  "charOffset": 11406,
                  "charLength": 23,
                  "snippet": {
                    "text": "Optional<TestInstances>"
                  },
                  "sourceLanguage": "JAVA"
                },
                "contextRegion": {
                  "startLine": 272,
                  "startColumn": 1,
                  "charOffset": 11262,
                  "charLength": 252,
                  "snippet": {
                    "text": "\t\t\tExtensionRegistry registry, ExtensionRegistrar registrar, ExtensionContext extensionContext);\n\n\tprotected TestInstances instantiateTestClass(Optional<TestInstances> outerInstances, ExtensionRegistry registry,\n\t\t\tExtensionContext extensionContext) {\n"
                  }
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "junit5.junit-jupiter-engine.main",
                  "kind": "module"
                }
              ]
            }
          ],
          "partialFingerprints": {
            "equalIndicator/v1": "aa983f25fb76b4b5bcdb752296fb2922014d89482b2f9fa413985bb43b92e198"
          },
          "baselineState": "unchanged",
          "properties": {
            "ideaSeverity": "WARNING",
            "tags": [
              "ideaSeverity"
            ]
          }
        },
        {
          "ruleId": "OptionalUsedAsFieldOrParameterType",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "'Optional used as type for parameter 'outerInstance''",
            "markdown": "`Optional` used as type for parameter 'outerInstance'"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "junit-jupiter-engine/src/main/java/org/junit/jupiter/engine/descriptor/ClassBasedTestDescriptor.java",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 285,
                  "startColumn": 43,
                  "charOffset": 11988,
                  "charLength": 16,
                  "snippet": {
                    "text": "Optional<Object>"
                  },
                  "sourceLanguage": "JAVA"
                },
                "contextRegion": {
                  "startLine": 283,
                  "startColumn": 1,
                  "charOffset": 11942,
                  "charLength": 134,
                  "snippet": {
                    "text": "\t}\n\n\tprivate Object invokeTestInstanceFactory(Optional<Object> outerInstance, ExtensionContext extensionContext) {\n\t\tObject instance;\n"
                  }
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "junit5.junit-jupiter-engine.main",
                  "kind": "module"
                }
              ]
            }
          ],
          "partialFingerprints": {
            "equalIndicator/v1": "5ee63a4546c9fda6d75ec5dced680d399d6d680025ffa02fbed2b4b7e0a81828"
          },
          "baselineState": "unchanged",
          "properties": {
            "ideaSeverity": "WARNING",
            "tags": [
              "ideaSeverity"
            ]
          }
        },
        {
          "ruleId": "OptionalUsedAsFieldOrParameterType",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "'Optional used as type for parameter 'outerInstance''",
            "markdown": "`Optional` used as type for parameter 'outerInstance'"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "junit-jupiter-engine/src/main/java/org/junit/jupiter/engine/descriptor/ClassBasedTestDescriptor.java",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 329,
                  "startColumn": 44,
                  "charOffset": 13868,
                  "charLength": 16,
                  "snippet": {
                    "text": "Optional<Object>"
                  },
                  "sourceLanguage": "JAVA"
                },
                "contextRegion": {
                  "startLine": 327,
                  "startColumn": 1,
                  "charOffset": 13821,
                  "charLength": 147,
                  "snippet": {
                    "text": "\t}\n\n\tprivate Object invokeTestClassConstructor(Optional<Object> outerInstance, ExtensionRegistry registry,\n\t\t\tExtensionContext extensionContext) {\n"
                  }
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "junit5.junit-jupiter-engine.main",
                  "kind": "module"
                }
              ]
            }
          ],
          "partialFingerprints": {
            "equalIndicator/v1": "7dfd3df268c57d83c5073107d38cf79d3224cd9dd60e2236bc99bcdf4ebdaf6d"
          },
          "baselineState": "unchanged",
          "properties": {
            "ideaSeverity": "WARNING",
            "tags": [
              "ideaSeverity"
            ]
          }
        },
        {
          "ruleId": "OptionalUsedAsFieldOrParameterType",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "'Optional' used as type for parameter 'identifiedTestDescriptor'",
            "markdown": "`Optional` used as type for parameter 'identifiedTestDescriptor'"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "junit-vintage-engine/src/main/java/org/junit/vintage/engine/discovery/UniqueIdFilter.java",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 53,
                  "startColumn": 4,
                  "charOffset": 1653,
                  "charLength": 34,
                  "snippet": {
                    "text": "Optional<? extends TestDescriptor>"
                  },
                  "sourceLanguage": "JAVA"
                },
                "contextRegion": {
                  "startLine": 51,
                  "startColumn": 1,
                  "charOffset": 1564,
                  "charLength": 272,
                  "snippet": {
                    "text": "\n\tprivate Deque<Description> determinePath(RunnerTestDescriptor runnerTestDescriptor,\n\t\t\tOptional<? extends TestDescriptor> identifiedTestDescriptor) {\n\t\tDeque<Description> path = new ArrayDeque<>();\n\t\tOptional<? extends TestDescriptor> current = identifiedTestDescriptor;"
                  }
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "junit5.junit-vintage-engine.main",
                  "kind": "module"
                }
              ]
            }
          ],
          "partialFingerprints": {
            "equalIndicator/v1": "5f787ba5600f91628aa713318cd8ae2513500be80f0054e8042046c76b8b1bf9"
          },
          "baselineState": "unchanged",
          "properties": {
            "ideaSeverity": "WARNING",
            "tags": [
              "ideaSeverity"
            ]
          }
        },
        {
          "ruleId": "OptionalUsedAsFieldOrParameterType",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "'Optional' used as type for parameter 'identifiedTestDescriptor'",
            "markdown": "`Optional` used as type for parameter 'identifiedTestDescriptor'"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "junit-vintage-engine/src/main/java/org/junit/vintage/engine/discovery/UniqueIdFilter.java",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 63,
                  "startColumn": 48,
                  "charOffset": 2102,
                  "charLength": 34,
                  "snippet": {
                    "text": "Optional<? extends TestDescriptor>"
                  },
                  "sourceLanguage": "JAVA"
                },
                "contextRegion": {
                  "startLine": 61,
                  "startColumn": 1,
                  "charOffset": 2051,
                  "charLength": 172,
                  "snippet": {
                    "text": "\t}\n\n\tprivate Set<Description> determineDescendants(Optional<? extends TestDescriptor> identifiedTestDescriptor) {\n\t\t// @formatter:off\n\t\treturn identifiedTestDescriptor.map("
                  }
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "junit5.junit-vintage-engine.main",
                  "kind": "module"
                }
              ]
            }
          ],
          "partialFingerprints": {
            "equalIndicator/v1": "8b267f707dee0f24e0f8f582c47620f45db65fd4ae6554bd833457138a23f93e"
          },
          "baselineState": "unchanged",
          "properties": {
            "ideaSeverity": "WARNING",
            "tags": [
              "ideaSeverity"
            ]
          }
        },
        {
          "ruleId": "OptionalUsedAsFieldOrParameterType",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "'Optional' used as type for parameter 'parent'",
            "markdown": "`Optional` used as type for parameter 'parent'"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "junit-vintage-engine/src/main/java/org/junit/vintage/engine/execution/RunListenerAdapter.java",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 195,
                  "startColumn": 63,
                  "charOffset": 7609,
                  "charLength": 24,
                  "snippet": {
                    "text": "Optional<TestDescriptor>"
                  },
                  "sourceLanguage": "JAVA"
                },
                "contextRegion": {
                  "startLine": 193,
                  "startColumn": 1,
                  "charOffset": 7543,
                  "charLength": 232,
                  "snippet": {
                    "text": "\t}\n\n\tprivate void fireExecutionStartedIncludingUnstartedAncestors(Optional<TestDescriptor> parent) {\n\t\tif (parent.isPresent() && canStart(parent.get())) {\n\t\t\tfireExecutionStartedIncludingUnstartedAncestors(parent.get().getParent());"
                  }
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "junit5.junit-vintage-engine.main",
                  "kind": "module"
                }
              ]
            }
          ],
          "partialFingerprints": {
            "equalIndicator/v1": "615ed947b0e20de4da5c85d1c5e256859f352b0f387185045c3c54a233014004"
          },
          "baselineState": "unchanged",
          "properties": {
            "ideaSeverity": "WARNING",
            "tags": [
              "ideaSeverity"
            ]
          }
        },
        {
          "ruleId": "OptionalUsedAsFieldOrParameterType",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "'Optional' used as type for field 'reason'",
            "markdown": "`Optional` used as type for field 'reason'"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "junit-platform-engine/src/main/java/org/junit/platform/engine/FilterResult.java",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 74,
                  "startColumn": 16,
                  "charOffset": 2316,
                  "charLength": 16,
                  "snippet": {
                    "text": "Optional<String>"
                  },
                  "sourceLanguage": "JAVA"
                },
                "contextRegion": {
                  "startLine": 72,
                  "startColumn": 1,
                  "charOffset": 2267,
                  "charLength": 131,
                  "snippet": {
                    "text": "\tprivate final boolean included;\n\n\tprivate final Optional<String> reason;\n\n\tprivate FilterResult(boolean included, String reason) {"
                  }
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "junit5.junit-platform-engine.main",
                  "kind": "module"
                }
              ]
            }
          ],
          "partialFingerprints": {
            "equalIndicator/v1": "592fca419f2865e13a89d41d5d1eb533cfc95460f2e22dd11f535cdf77fd6c56"
          },
          "baselineState": "unchanged",
          "properties": {
            "ideaSeverity": "WARNING",
            "tags": [
              "ideaSeverity"
            ]
          }
        },
        {
          "ruleId": "OptionalUsedAsFieldOrParameterType",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "'Optional' used as type for field 'reason'",
            "markdown": "`Optional` used as type for field 'reason'"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "junit-platform-engine/src/main/java/org/junit/platform/engine/support/hierarchical/Node.java",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 210,
                  "startColumn": 17,
                  "charOffset": 6722,
                  "charLength": 16,
                  "snippet": {
                    "text": "Optional<String>"
                  },
                  "sourceLanguage": "JAVA"
                },
                "contextRegion": {
                  "startLine": 208,
                  "startColumn": 1,
                  "charOffset": 6672,
                  "charLength": 81,
                  "snippet": {
                    "text": "\n\t\tprivate final boolean skipped;\n\t\tprivate final Optional<String> reason;\n\n\t\t/**"
                  }
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "junit5.junit-platform-engine.main",
                  "kind": "module"
                }
              ]
            }
          ],
          "partialFingerprints": {
            "equalIndicator/v1": "908cc405a0c651ab49a6a4ab98731d499719c3988b34679f543c4a835fb81bd7"
          },
          "baselineState": "unchanged",
          "properties": {
            "ideaSeverity": "WARNING",
            "tags": [
              "ideaSeverity"
            ]
          }
        },
        {
          "ruleId": "OptionalUsedAsFieldOrParameterType",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "'Optional' used as type for parameter 'element'",
            "markdown": "`Optional` used as type for parameter 'element'"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "junit-platform-commons/src/main/java/org/junit/platform/commons/util/AnnotationUtils.java",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 190,
                  "startColumn": 73,
                  "charOffset": 6620,
                  "charLength": 36,
                  "snippet": {
                    "text": "Optional<? extends AnnotatedElement>"
                  },
                  "sourceLanguage": "JAVA"
                },
                "contextRegion": {
                  "startLine": 188,
                  "startColumn": 1,
                  "charOffset": 6438,
                  "charLength": 258,
                  "snippet": {
                    "text": "\t * @see org.junit.platform.commons.support.AnnotationSupport#findRepeatableAnnotations(Optional, Class)\n\t */\n\tpublic static <A extends Annotation> List<A> findRepeatableAnnotations(Optional<? extends AnnotatedElement> element,\n\t\t\tClass<A> annotationType) {\n"
                  }
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "junit5.junit-platform-commons.main",
                  "kind": "module"
                }
              ]
            }
          ],
          "partialFingerprints": {
            "equalIndicator/v1": "c2251a98f71658c306622ee7f1a98d15aa33313bd8d8e67688370e729632e947"
          },
          "baselineState": "unchanged",
          "properties": {
            "ideaSeverity": "WARNING",
            "tags": [
              "ideaSeverity"
            ]
          }
        },
        {
          "ruleId": "OptionalUsedAsFieldOrParameterType",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "'Optional' used as type for parameter 'element'",
            "markdown": "`Optional` used as type for parameter 'element'"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "junit-platform-commons/src/main/java/org/junit/platform/commons/util/AnnotationUtils.java",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 99,
                  "startColumn": 66,
                  "charOffset": 3439,
                  "charLength": 36,
                  "snippet": {
                    "text": "Optional<? extends AnnotatedElement>"
                  },
                  "sourceLanguage": "JAVA"
                },
                "contextRegion": {
                  "startLine": 97,
                  "startColumn": 1,
                  "charOffset": 3275,
                  "charLength": 240,
                  "snippet": {
                    "text": "\t * @see org.junit.platform.commons.support.AnnotationSupport#findAnnotation(Optional, Class)\n\t */\n\tpublic static <A extends Annotation> Optional<A> findAnnotation(Optional<? extends AnnotatedElement> element,\n\t\t\tClass<A> annotationType) {\n"
                  }
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "junit5.junit-platform-commons.main",
                  "kind": "module"
                }
              ]
            }
          ],
          "partialFingerprints": {
            "equalIndicator/v1": "c9257d93970e880100910ca3b02d33aff256b6dc47417c3a28b7f38af5897307"
          },
          "baselineState": "unchanged",
          "properties": {
            "ideaSeverity": "WARNING",
            "tags": [
              "ideaSeverity"
            ]
          }
        },
        {
          "ruleId": "OptionalUsedAsFieldOrParameterType",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "'Optional' used as type for parameter 'element'",
            "markdown": "`Optional` used as type for parameter 'element'"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "junit-platform-commons/src/main/java/org/junit/platform/commons/util/AnnotationUtils.java",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 74,
                  "startColumn": 36,
                  "charOffset": 2378,
                  "charLength": 36,
                  "snippet": {
                    "text": "Optional<? extends AnnotatedElement>"
                  },
                  "sourceLanguage": "JAVA"
                },
                "contextRegion": {
                  "startLine": 72,
                  "startColumn": 1,
                  "charOffset": 2247,
                  "charLength": 226,
                  "snippet": {
                    "text": "\t * @see org.junit.platform.commons.support.AnnotationSupport#isAnnotated(Optional, Class)\n\t */\n\tpublic static boolean isAnnotated(Optional<? extends AnnotatedElement> element,\n\t\t\tClass<? extends Annotation> annotationType) {\n"
                  }
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "junit5.junit-platform-commons.main",
                  "kind": "module"
                }
              ]
            }
          ],
          "partialFingerprints": {
            "equalIndicator/v1": "a85fecca28bb67f8d89fd721b5b362e14d19e7deea023e3f00f51a038e4e4b75"
          },
          "baselineState": "unchanged",
          "properties": {
            "ideaSeverity": "WARNING",
            "tags": [
              "ideaSeverity"
            ]
          }
        },
        {
          "ruleId": "OptionalUsedAsFieldOrParameterType",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "'Optional' used as type for parameter 'element'",
            "markdown": "`Optional` used as type for parameter 'element'"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "junit-platform-commons/src/main/java/org/junit/platform/commons/support/AnnotationSupport.java",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 102,
                  "startColumn": 66,
                  "charOffset": 3810,
                  "charLength": 36,
                  "snippet": {
                    "text": "Optional<? extends AnnotatedElement>"
                  },
                  "sourceLanguage": "JAVA"
                },
                "contextRegion": {
                  "startLine": 100,
                  "startColumn": 1,
                  "charOffset": 3698,
                  "charLength": 188,
                  "snippet": {
                    "text": "\t */\n\t@API(status = MAINTAINED, since = \"1.1\")\n\tpublic static <A extends Annotation> Optional<A> findAnnotation(Optional<? extends AnnotatedElement> element,\n\t\t\tClass<A> annotationType) {\n"
                  }
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "junit5.junit-platform-commons.main",
                  "kind": "module"
                }
              ]
            }
          ],
          "partialFingerprints": {
            "equalIndicator/v1": "05d834a1b13726b23e3f2d9a84795afd866170e072f82f1becaf691f6dd3f00d"
          },
          "baselineState": "unchanged",
          "properties": {
            "ideaSeverity": "WARNING",
            "tags": [
              "ideaSeverity"
            ]
          }
        },
        {
          "ruleId": "OptionalUsedAsFieldOrParameterType",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "'Optional' used as type for parameter 'element'",
            "markdown": "`Optional` used as type for parameter 'element'"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "junit-platform-commons/src/main/java/org/junit/platform/commons/support/AnnotationSupport.java",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 65,
                  "startColumn": 36,
                  "charOffset": 2265,
                  "charLength": 36,
                  "snippet": {
                    "text": "Optional<? extends AnnotatedElement>"
                  },
                  "sourceLanguage": "JAVA"
                },
                "contextRegion": {
                  "startLine": 63,
                  "startColumn": 1,
                  "charOffset": 2183,
                  "charLength": 177,
                  "snippet": {
                    "text": "\t */\n\t@API(status = MAINTAINED, since = \"1.3\")\n\tpublic static boolean isAnnotated(Optional<? extends AnnotatedElement> element,\n\t\t\tClass<? extends Annotation> annotationType) {\n"
                  }
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "junit5.junit-platform-commons.main",
                  "kind": "module"
                }
              ]
            }
          ],
          "partialFingerprints": {
            "equalIndicator/v1": "592fa2903ea4242ef1895a9c5471f1bce543472dd38a75a4b08058677bf55c35"
          },
          "baselineState": "unchanged",
          "properties": {
            "ideaSeverity": "WARNING",
            "tags": [
              "ideaSeverity"
            ]
          }
        },
        {
          "ruleId": "OptionalUsedAsFieldOrParameterType",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "'Optional' used as type for parameter 'element'",
            "markdown": "`Optional` used as type for parameter 'element'"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "junit-platform-commons/src/main/java/org/junit/platform/commons/support/AnnotationSupport.java",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 149,
                  "startColumn": 73,
                  "charOffset": 5963,
                  "charLength": 36,
                  "snippet": {
                    "text": "Optional<? extends AnnotatedElement>"
                  },
                  "sourceLanguage": "JAVA"
                },
                "contextRegion": {
                  "startLine": 147,
                  "startColumn": 1,
                  "charOffset": 5844,
                  "charLength": 195,
                  "snippet": {
                    "text": "\t */\n\t@API(status = MAINTAINED, since = \"1.5\")\n\tpublic static <A extends Annotation> List<A> findRepeatableAnnotations(Optional<? extends AnnotatedElement> element,\n\t\t\tClass<A> annotationType) {\n"
                  }
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "junit5.junit-platform-commons.main",
                  "kind": "module"
                }
              ]
            }
          ],
          "partialFingerprints": {
            "equalIndicator/v1": "b3d9b523ced914fab7bf2b3cf0d5f94eab420e9aa6f2a26d91bfbcf78ab96bcb"
          },
          "baselineState": "unchanged",
          "properties": {
            "ideaSeverity": "WARNING",
            "tags": [
              "ideaSeverity"
            ]
          }
        },
        {
          "ruleId": "OptionalUsedAsFieldOrParameterType",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "'Optional' used as type for parameter 'customClassLoader'",
            "markdown": "`Optional` used as type for parameter 'customClassLoader'"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "junit-platform-console/src/main/java/org/junit/platform/console/tasks/CustomContextClassLoaderExecutor.java",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 23,
                  "startColumn": 35,
                  "charOffset": 579,
                  "charLength": 21,
                  "snippet": {
                    "text": "Optional<ClassLoader>"
                  },
                  "sourceLanguage": "JAVA"
                },
                "contextRegion": {
                  "startLine": 21,
                  "startColumn": 1,
                  "charOffset": 488,
                  "charLength": 182,
                  "snippet": {
                    "text": "\tprivate final Optional<ClassLoader> customClassLoader;\n\n\tCustomContextClassLoaderExecutor(Optional<ClassLoader> customClassLoader) {\n\t\tthis.customClassLoader = customClassLoader;\n\t}"
                  }
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "junit5.junit-platform-console.main",
                  "kind": "module"
                }
              ]
            }
          ],
          "partialFingerprints": {
            "equalIndicator/v1": "bd7615dbb9c3330fc4353f547fff7fd3e888336a2e3ee2b921e2d380794a9d32"
          },
          "baselineState": "unchanged",
          "properties": {
            "ideaSeverity": "WARNING",
            "tags": [
              "ideaSeverity"
            ]
          }
        },
        {
          "ruleId": "OptionalUsedAsFieldOrParameterType",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "'Optional' used as type for field 'customClassLoader'",
            "markdown": "`Optional` used as type for field 'customClassLoader'"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "junit-platform-console/src/main/java/org/junit/platform/console/tasks/CustomContextClassLoaderExecutor.java",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 21,
                  "startColumn": 16,
                  "charOffset": 503,
                  "charLength": 21,
                  "snippet": {
                    "text": "Optional<ClassLoader>"
                  },
                  "sourceLanguage": "JAVA"
                },
                "contextRegion": {
                  "startLine": 19,
                  "startColumn": 1,
                  "charOffset": 446,
                  "charLength": 175,
                  "snippet": {
                    "text": "class CustomContextClassLoaderExecutor {\n\n\tprivate final Optional<ClassLoader> customClassLoader;\n\n\tCustomContextClassLoaderExecutor(Optional<ClassLoader> customClassLoader) {"
                  }
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "junit5.junit-platform-console.main",
                  "kind": "module"
                }
              ]
            }
          ],
          "partialFingerprints": {
            "equalIndicator/v1": "74a119b4bedad89d3741092fd5316d3a417021d4fc4bfc4d60917e0b4939f333"
          },
          "baselineState": "unchanged",
          "properties": {
            "ideaSeverity": "WARNING",
            "tags": [
              "ideaSeverity"
            ]
          }
        },
        {
          "ruleId": "OptionalUsedAsFieldOrParameterType",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "'Optional' used as type for field 'stdoutInterceptor'",
            "markdown": "`Optional` used as type for field 'stdoutInterceptor'"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "junit-platform-launcher/src/main/java/org/junit/platform/launcher/core/StreamInterceptingTestExecutionListener.java",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 37,
                  "startColumn": 16,
                  "charOffset": 1499,
                  "charLength": 27,
                  "snippet": {
                    "text": "Optional<StreamInterceptor>"
                  },
                  "sourceLanguage": "JAVA"
                },
                "contextRegion": {
                  "startLine": 35,
                  "startColumn": 1,
                  "charOffset": 1397,
                  "charLength": 275,
                  "snippet": {
                    "text": "class StreamInterceptingTestExecutionListener implements EagerTestExecutionListener {\n\n\tprivate final Optional<StreamInterceptor> stdoutInterceptor;\n\tprivate final Optional<StreamInterceptor> stderrInterceptor;\n\tprivate final BiConsumer<TestIdentifier, ReportEntry> reporter;"
                  }
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "junit5.junit-platform-launcher.main",
                  "kind": "module"
                }
              ]
            }
          ],
          "partialFingerprints": {
            "equalIndicator/v1": "ad02cba0eb87f5fb92dbedf32646e805c001cf2e6f72013e1cf42a113984a367"
          },
          "baselineState": "unchanged",
          "properties": {
            "ideaSeverity": "WARNING",
            "tags": [
              "ideaSeverity"
            ]
          }
        },
        {
          "ruleId": "OptionalUsedAsFieldOrParameterType",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "'Optional' used as type for parameter 'stdoutInterceptor'",
            "markdown": "`Optional` used as type for parameter 'stdoutInterceptor'"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "junit-platform-launcher/src/main/java/org/junit/platform/launcher/core/StreamInterceptingTestExecutionListener.java",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 66,
                  "startColumn": 50,
                  "charOffset": 2975,
                  "charLength": 27,
                  "snippet": {
                    "text": "Optional<StreamInterceptor>"
                  },
                  "sourceLanguage": "JAVA"
                },
                "contextRegion": {
                  "startLine": 64,
                  "startColumn": 1,
                  "charOffset": 2922,
                  "charLength": 247,
                  "snippet": {
                    "text": "\t}\n\n\tprivate StreamInterceptingTestExecutionListener(Optional<StreamInterceptor> stdoutInterceptor,\n\t\t\tOptional<StreamInterceptor> stderrInterceptor, BiConsumer<TestIdentifier, ReportEntry> reporter) {\n\t\tthis.stdoutInterceptor = stdoutInterceptor;"
                  }
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "junit5.junit-platform-launcher.main",
                  "kind": "module"
                }
              ]
            }
          ],
          "partialFingerprints": {
            "equalIndicator/v1": "d505e7781fa9f1a3ee7f3c80a33e8f5439492ca33020d72da7dcd561083986cd"
          },
          "baselineState": "unchanged",
          "properties": {
            "ideaSeverity": "WARNING",
            "tags": [
              "ideaSeverity"
            ]
          }
        },
        {
          "ruleId": "OptionalUsedAsFieldOrParameterType",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "'Optional' used as type for parameter 'stderrInterceptor'",
            "markdown": "`Optional` used as type for parameter 'stderrInterceptor'"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "junit-platform-launcher/src/main/java/org/junit/platform/launcher/core/StreamInterceptingTestExecutionListener.java",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 67,
                  "startColumn": 4,
                  "charOffset": 3025,
                  "charLength": 27,
                  "snippet": {
                    "text": "Optional<StreamInterceptor>"
                  },
                  "sourceLanguage": "JAVA"
                },
                "contextRegion": {
                  "startLine": 65,
                  "startColumn": 1,
                  "charOffset": 2925,
                  "charLength": 290,
                  "snippet": {
                    "text": "\n\tprivate StreamInterceptingTestExecutionListener(Optional<StreamInterceptor> stdoutInterceptor,\n\t\t\tOptional<StreamInterceptor> stderrInterceptor, BiConsumer<TestIdentifier, ReportEntry> reporter) {\n\t\tthis.stdoutInterceptor = stdoutInterceptor;\n\t\tthis.stderrInterceptor = stderrInterceptor;"
                  }
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "junit5.junit-platform-launcher.main",
                  "kind": "module"
                }
              ]
            }
          ],
          "partialFingerprints": {
            "equalIndicator/v1": "1688b5b7eeee72787a353dea51378030bc684ae03aabd14804d90793f65006fc"
          },
          "baselineState": "unchanged",
          "properties": {
            "ideaSeverity": "WARNING",
            "tags": [
              "ideaSeverity"
            ]
          }
        },
        {
          "ruleId": "OptionalUsedAsFieldOrParameterType",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "'Optional' used as type for field 'stderrInterceptor'",
            "markdown": "`Optional` used as type for field 'stderrInterceptor'"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "junit-platform-launcher/src/main/java/org/junit/platform/launcher/core/StreamInterceptingTestExecutionListener.java",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 38,
                  "startColumn": 16,
                  "charOffset": 1561,
                  "charLength": 27,
                  "snippet": {
                    "text": "Optional<StreamInterceptor>"
                  },
                  "sourceLanguage": "JAVA"
                },
                "contextRegion": {
                  "startLine": 36,
                  "startColumn": 1,
                  "charOffset": 1483,
                  "charLength": 190,
                  "snippet": {
                    "text": "\n\tprivate final Optional<StreamInterceptor> stdoutInterceptor;\n\tprivate final Optional<StreamInterceptor> stderrInterceptor;\n\tprivate final BiConsumer<TestIdentifier, ReportEntry> reporter;\n"
                  }
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "junit5.junit-platform-launcher.main",
                  "kind": "module"
                }
              ]
            }
          ],
          "partialFingerprints": {
            "equalIndicator/v1": "ff34c81a46ae68acd4550e55b0e84de2e84d86165e5e9f5b0c350976380f811a"
          },
          "baselineState": "unchanged",
          "properties": {
            "ideaSeverity": "WARNING",
            "tags": [
              "ideaSeverity"
            ]
          }
        },
        {
          "ruleId": "OptionalUsedAsFieldOrParameterType",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "'Optional' used as type for parameter 'reason'",
            "markdown": "`Optional` used as type for parameter 'reason'"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "junit-platform-launcher/src/main/java/org/junit/platform/launcher/core/EngineDiscoveryOrchestrator.java",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 132,
                  "startColumn": 44,
                  "charOffset": 5621,
                  "charLength": 16,
                  "snippet": {
                    "text": "Optional<String>"
                  },
                  "sourceLanguage": "JAVA"
                },
                "contextRegion": {
                  "startLine": 130,
                  "startColumn": 1,
                  "charOffset": 5574,
                  "charLength": 283,
                  "snippet": {
                    "text": "\t}\n\n\tprivate void populateExclusionReasonInMap(Optional<String> reason, TestDescriptor testDescriptor,\n\t\t\tMap<String, List<TestDescriptor>> excludedTestDescriptorsByReason) {\n\t\texcludedTestDescriptorsByReason.computeIfAbsent(reason.orElse(\"Unknown\"), list -> new LinkedList<>()).add("
                  }
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "junit5.junit-platform-launcher.main",
                  "kind": "module"
                }
              ]
            }
          ],
          "partialFingerprints": {
            "equalIndicator/v1": "4f30e82fdf9902332376de42bcd5bbc8f4e87dd9d35bee7ddd96653c3c885f9a"
          },
          "baselineState": "unchanged",
          "properties": {
            "ideaSeverity": "WARNING",
            "tags": [
              "ideaSeverity"
            ]
          }
        },
        {
          "ruleId": "OptionalUsedAsFieldOrParameterType",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "'Optional' used as type for parameter 'testIdentifier'",
            "markdown": "`Optional` used as type for parameter 'testIdentifier'"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "junit-platform-reporting/src/main/java/org/junit/platform/reporting/legacy/xml/XmlReportData.java",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 129,
                  "startColumn": 48,
                  "charOffset": 4509,
                  "charLength": 24,
                  "snippet": {
                    "text": "Optional<TestIdentifier>"
                  },
                  "sourceLanguage": "JAVA"
                },
                "contextRegion": {
                  "startLine": 127,
                  "startColumn": 1,
                  "charOffset": 4458,
                  "charLength": 186,
                  "snippet": {
                    "text": "\t}\n\n\tprivate Optional<TestIdentifier> findAncestor(Optional<TestIdentifier> testIdentifier,\n\t\t\tPredicate<TestIdentifier> predicate) {\n\t\tOptional<TestIdentifier> current = testIdentifier;"
                  }
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "junit5.junit-platform-reporting.main",
                  "kind": "module"
                }
              ]
            }
          ],
          "partialFingerprints": {
            "equalIndicator/v1": "72d978f83bbc01085ddb0e1c9e53f6e97b79cf04d2c58f5de21e8bce1b07cbd3"
          },
          "baselineState": "unchanged",
          "properties": {
            "ideaSeverity": "WARNING",
            "tags": [
              "ideaSeverity"
            ]
          }
        },
        {
          "ruleId": "IOResource",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "'InputStream' should be opened in front of a 'try' block and closed in the corresponding 'finally' block",
            "markdown": "'InputStream' should be opened in front of a 'try' block and closed in the corresponding 'finally' block"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "junit-jupiter-params/src/main/java/org/junit/jupiter/params/provider/CsvFileArgumentsProvider.java",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 193,
                  "startColumn": 40,
                  "charOffset": 5757,
                  "charLength": 19,
                  "snippet": {
                    "text": "getResourceAsStream"
                  },
                  "sourceLanguage": "JAVA"
                },
                "contextRegion": {
                  "startLine": 191,
                  "startColumn": 1,
                  "charOffset": 5538,
                  "charLength": 353,
                  "snippet": {
                    "text": "\t\tpublic InputStream openClasspathResource(Class<?> baseClass, String path) {\n\t\t\tPreconditions.notBlank(path, () -> \"Classpath resource [\" + path + \"] must not be null or blank\");\n\t\t\tInputStream inputStream = baseClass.getResourceAsStream(path);\n\t\t\treturn Preconditions.notNull(inputStream, () -> \"Classpath resource [\" + path + \"] does not exist\");\n\t\t}"
                  }
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "junit5.junit-jupiter-params.main",
                  "kind": "module"
                }
              ]
            }
          ],
          "partialFingerprints": {
            "equalIndicator/v1": "49ca7ff7b4d85280aa62ad0fe69e9e73bf5d0292318cda83b7ca118a1ce630bd"
          },
          "baselineState": "unchanged",
          "properties": {
            "ideaSeverity": "WARNING",
            "tags": [
              "ideaSeverity"
            ]
          }
        },
        {
          "ruleId": "HasPlatformType",
          "kind": "fail",
          "level": "note",
          "message": {
            "text": "Declaration has type inferred from a platform call, which can lead to unchecked nullability issues. Specify type explicitly as nullable or non-nullable.",
            "markdown": "Declaration has type inferred from a platform call, which can lead to unchecked nullability issues. Specify type explicitly as nullable or non-nullable."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "build.gradle.kts",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 30,
                  "startColumn": 5,
                  "charOffset": 712,
                  "charLength": 16,
                  "snippet": {
                    "text": "buildTimeAndDate"
                  },
                  "sourceLanguage": "kotlin"
                },
                "contextRegion": {
                  "startLine": 28,
                  "startColumn": 1,
                  "charOffset": 705,
                  "charLength": 112,
                  "snippet": {
                    "text": "}\n\nval buildTimeAndDate by extra {\n\n\t// SOURCE_DATE_EPOCH is a UNIX timestamp for pinning build metadata against"
                  }
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "junit5",
                  "kind": "module"
                }
              ]
            }
          ],
          "partialFingerprints": {
            "equalIndicator/v1": "f31631da71b1cdf1ecde989663509ce1c7e361d95769ff2def60ecbefdbc73b2"
          },
          "baselineState": "unchanged",
          "properties": {
            "ideaSeverity": "WEAK WARNING",
            "tags": [
              "ideaSeverity"
            ]
          }
        },
        {
          "ruleId": "HasPlatformType",
          "kind": "fail",
          "level": "note",
          "message": {
            "text": "Declaration has type inferred from a platform call, which can lead to unchecked nullability issues. Specify type explicitly as nullable or non-nullable.",
            "markdown": "Declaration has type inferred from a platform call, which can lead to unchecked nullability issues. Specify type explicitly as nullable or non-nullable."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "build.gradle.kts",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 48,
                  "startColumn": 5,
                  "charOffset": 1179,
                  "charLength": 9,
                  "snippet": {
                    "text": "buildDate"
                  },
                  "sourceLanguage": "kotlin"
                },
                "contextRegion": {
                  "startLine": 46,
                  "startColumn": 1,
                  "charOffset": 1172,
                  "charLength": 238,
                  "snippet": {
                    "text": "}\n\nval buildDate by extra { DateTimeFormatter.ISO_LOCAL_DATE.format(buildTimeAndDate) }\nval buildTime by extra { DateTimeFormatter.ofPattern(\"HH:mm:ss.SSSZ\").format(buildTimeAndDate) }\nval buildRevision by extra { versioning.info.commit }"
                  }
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "junit5",
                  "kind": "module"
                }
              ]
            }
          ],
          "partialFingerprints": {
            "equalIndicator/v1": "5559152d8016719dd1acef7e8569eba37ce254d8fbfd67cfe0202cf6299dab91"
          },
          "baselineState": "unchanged",
          "properties": {
            "ideaSeverity": "WEAK WARNING",
            "tags": [
              "ideaSeverity"
            ]
          }
        },
        {
          "ruleId": "HasPlatformType",
          "kind": "fail",
          "level": "note",
          "message": {
            "text": "Declaration has type inferred from a platform call, which can lead to unchecked nullability issues. Specify type explicitly as nullable or non-nullable.",
            "markdown": "Declaration has type inferred from a platform call, which can lead to unchecked nullability issues. Specify type explicitly as nullable or non-nullable."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "build.gradle.kts",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 49,
                  "startColumn": 5,
                  "charOffset": 1264,
                  "charLength": 9,
                  "snippet": {
                    "text": "buildTime"
                  },
                  "sourceLanguage": "kotlin"
                },
                "contextRegion": {
                  "startLine": 47,
                  "startColumn": 1,
                  "charOffset": 1174,
                  "charLength": 336,
                  "snippet": {
                    "text": "\nval buildDate by extra { DateTimeFormatter.ISO_LOCAL_DATE.format(buildTimeAndDate) }\nval buildTime by extra { DateTimeFormatter.ofPattern(\"HH:mm:ss.SSSZ\").format(buildTimeAndDate) }\nval buildRevision by extra { versioning.info.commit }\nval builtByValue by extra { project.findProperty(\"builtBy\") ?: project.property(\"defaultBuiltBy\") }"
                  }
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "junit5",
                  "kind": "module"
                }
              ]
            }
          ],
          "partialFingerprints": {
            "equalIndicator/v1": "0e345d5424b39dfc88569456841e69ddf712c6d1c27bb0098039ecdc05e4e0db"
          },
          "baselineState": "unchanged",
          "properties": {
            "ideaSeverity": "WEAK WARNING",
            "tags": [
              "ideaSeverity"
            ]
          }
        },
        {
          "ruleId": "HasPlatformType",
          "kind": "fail",
          "level": "note",
          "message": {
            "text": "Declaration has type inferred from a platform call, which can lead to unchecked nullability issues. Specify type explicitly as nullable or non-nullable.",
            "markdown": "Declaration has type inferred from a platform call, which can lead to unchecked nullability issues. Specify type explicitly as nullable or non-nullable."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "build.gradle.kts",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 50,
                  "startColumn": 5,
                  "charOffset": 1361,
                  "charLength": 13,
                  "snippet": {
                    "text": "buildRevision"
                  },
                  "sourceLanguage": "kotlin"
                },
                "contextRegion": {
                  "startLine": 48,
                  "startColumn": 1,
                  "charOffset": 1175,
                  "charLength": 336,
                  "snippet": {
                    "text": "val buildDate by extra { DateTimeFormatter.ISO_LOCAL_DATE.format(buildTimeAndDate) }\nval buildTime by extra { DateTimeFormatter.ofPattern(\"HH:mm:ss.SSSZ\").format(buildTimeAndDate) }\nval buildRevision by extra { versioning.info.commit }\nval builtByValue by extra { project.findProperty(\"builtBy\") ?: project.property(\"defaultBuiltBy\") }\n"
                  }
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "junit5",
                  "kind": "module"
                }
              ]
            }
          ],
          "partialFingerprints": {
            "equalIndicator/v1": "33f12d24d38ed0bb9a35370141ada4ce368ad189b0cdfeb2bd5ad0a049b5a46c"
          },
          "baselineState": "unchanged",
          "properties": {
            "ideaSeverity": "WEAK WARNING",
            "tags": [
              "ideaSeverity"
            ]
          }
        },
        {
          "ruleId": "DeprecatedIsStillUsed",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Deprecated member 'SingleTestExecutor' is still used",
            "markdown": "Deprecated member 'SingleTestExecutor' is still used"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "junit-platform-engine/src/main/java/org/junit/platform/engine/support/hierarchical/SingleTestExecutor.java",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 34,
                  "startColumn": 14,
                  "charOffset": 1223,
                  "charLength": 18,
                  "snippet": {
                    "text": "SingleTestExecutor"
                  },
                  "sourceLanguage": "JAVA"
                },
                "contextRegion": {
                  "startLine": 32,
                  "startColumn": 1,
                  "charOffset": 1157,
                  "charLength": 92,
                  "snippet": {
                    "text": "@Deprecated\n@API(status = DEPRECATED, since = \"1.2\")\npublic class SingleTestExecutor {\n\n\t/**"
                  }
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "junit5.junit-platform-engine.main",
                  "kind": "module"
                }
              ]
            }
          ],
          "partialFingerprints": {
            "equalIndicator/v1": "48947bc96c05c7b7d079051317203e48c0f713c1e3f21db783870e78775bbbfc"
          },
          "baselineState": "unchanged",
          "properties": {
            "ideaSeverity": "WARNING",
            "tags": [
              "ideaSeverity"
            ]
          }
        },
        {
          "ruleId": "DeprecatedIsStillUsed",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Deprecated member 'loadClass' is still used",
            "markdown": "Deprecated member 'loadClass' is still used"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "junit-platform-commons/src/main/java/org/junit/platform/commons/support/ReflectionSupport.java",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 69,
                  "startColumn": 35,
                  "charOffset": 2458,
                  "charLength": 9,
                  "snippet": {
                    "text": "loadClass"
                  },
                  "sourceLanguage": "JAVA"
                },
                "contextRegion": {
                  "startLine": 67,
                  "startColumn": 1,
                  "charOffset": 2377,
                  "charLength": 150,
                  "snippet": {
                    "text": "\t@Deprecated\n\t@SuppressWarnings(\"deprecation\")\n\tpublic static Optional<Class<?>> loadClass(String name) {\n\t\treturn ReflectionUtils.loadClass(name);\n\t}"
                  }
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "junit5.junit-platform-commons.main",
                  "kind": "module"
                }
              ]
            }
          ],
          "partialFingerprints": {
            "equalIndicator/v1": "1d4504d232376af6d7f34a6946e68b4c32a9bc440a0525a419b11411c6b24eaa"
          },
          "baselineState": "unchanged",
          "properties": {
            "ideaSeverity": "WARNING",
            "tags": [
              "ideaSeverity"
            ]
          }
        },
        {
          "ruleId": "DeprecatedIsStillUsed",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Deprecated member 'readFieldValue' is still used",
            "markdown": "Deprecated member 'readFieldValue' is still used"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "junit-platform-commons/src/main/java/org/junit/platform/commons/util/ReflectionUtils.java",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 619,
                  "startColumn": 33,
                  "charOffset": 19728,
                  "charLength": 14,
                  "snippet": {
                    "text": "readFieldValue"
                  },
                  "sourceLanguage": "JAVA"
                },
                "contextRegion": {
                  "startLine": 617,
                  "startColumn": 1,
                  "charOffset": 19641,
                  "charLength": 196,
                  "snippet": {
                    "text": "\t@API(status = DEPRECATED, since = \"1.4\")\n\t@Deprecated\n\tpublic static Optional<Object> readFieldValue(Field field, Object instance) {\n\t\treturn tryToReadFieldValue(field, instance).toOptional();\n\t}"
                  }
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "junit5.junit-platform-commons.main",
                  "kind": "module"
                }
              ]
            }
          ],
          "partialFingerprints": {
            "equalIndicator/v1": "5ebb58c51699bd974f170d3cbd2a699205e859699872b53c9d0a9f010d0b5bcb"
          },
          "baselineState": "unchanged",
          "properties": {
            "ideaSeverity": "WARNING",
            "tags": [
              "ideaSeverity"
            ]
          }
        },
        {
          "ruleId": "DeprecatedIsStillUsed",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Deprecated member 'getOutermostInstance' is still used",
            "markdown": "Deprecated member 'getOutermostInstance' is still used"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "junit-platform-commons/src/main/java/org/junit/platform/commons/util/ReflectionUtils.java",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 906,
                  "startColumn": 33,
                  "charOffset": 31552,
                  "charLength": 20,
                  "snippet": {
                    "text": "getOutermostInstance"
                  },
                  "sourceLanguage": "JAVA"
                },
                "contextRegion": {
                  "startLine": 904,
                  "startColumn": 1,
                  "charOffset": 31465,
                  "charLength": 283,
                  "snippet": {
                    "text": "\t@API(status = DEPRECATED, since = \"1.4\")\n\t@Deprecated\n\tpublic static Optional<Object> getOutermostInstance(Object inner, Class<?> requiredType) {\n\t\tPreconditions.notNull(inner, \"inner object must not be null\");\n\t\tPreconditions.notNull(requiredType, \"requiredType must not be null\");"
                  }
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "junit5.junit-platform-commons.main",
                  "kind": "module"
                }
              ]
            }
          ],
          "partialFingerprints": {
            "equalIndicator/v1": "c5882be021eb335d0d3c6569351c43f653cb0c162af7cfdf7cfc8b4d158015a7"
          },
          "baselineState": "unchanged",
          "properties": {
            "ideaSeverity": "WARNING",
            "tags": [
              "ideaSeverity"
            ]
          }
        },
        {
          "ruleId": "DeprecatedIsStillUsed",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Deprecated member 'readFieldValue' is still used",
            "markdown": "Deprecated member 'readFieldValue' is still used"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "junit-platform-commons/src/main/java/org/junit/platform/commons/util/ReflectionUtils.java",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 581,
                  "startColumn": 33,
                  "charOffset": 18371,
                  "charLength": 14,
                  "snippet": {
                    "text": "readFieldValue"
                  },
                  "sourceLanguage": "JAVA"
                },
                "contextRegion": {
                  "startLine": 579,
                  "startColumn": 1,
                  "charOffset": 18284,
                  "charLength": 169,
                  "snippet": {
                    "text": "\t@API(status = DEPRECATED, since = \"1.4\")\n\t@Deprecated\n\tpublic static Optional<Object> readFieldValue(Field field) {\n\t\treturn tryToReadFieldValue(field).toOptional();\n\t}"
                  }
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "junit5.junit-platform-commons.main",
                  "kind": "module"
                }
              ]
            }
          ],
          "partialFingerprints": {
            "equalIndicator/v1": "31a3e8a666d23be096ea607e5eaea59edee2efada26221f1e0f98917ef23dde1"
          },
          "baselineState": "unchanged",
          "properties": {
            "ideaSeverity": "WARNING",
            "tags": [
              "ideaSeverity"
            ]
          }
        },
        {
          "ruleId": "DeprecatedIsStillUsed",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Deprecated member 'readFieldValue' is still used",
            "markdown": "Deprecated member 'readFieldValue' is still used"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "junit-platform-commons/src/main/java/org/junit/platform/commons/util/ReflectionUtils.java",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 537,
                  "startColumn": 37,
                  "charOffset": 16563,
                  "charLength": 14,
                  "snippet": {
                    "text": "readFieldValue"
                  },
                  "sourceLanguage": "JAVA"
                },
                "contextRegion": {
                  "startLine": 535,
                  "startColumn": 1,
                  "charOffset": 16472,
                  "charLength": 227,
                  "snippet": {
                    "text": "\t@API(status = DEPRECATED, since = \"1.4\")\n\t@Deprecated\n\tpublic static <T> Optional<Object> readFieldValue(Class<T> clazz, String fieldName, T instance) {\n\t\treturn tryToReadFieldValue(clazz, fieldName, instance).toOptional();\n\t}"
                  }
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "junit5.junit-platform-commons.main",
                  "kind": "module"
                }
              ]
            }
          ],
          "partialFingerprints": {
            "equalIndicator/v1": "6e08cf19e100fa79f22ba53b101d3211a3f0e09d151f8d8687ff778ba370de50"
          },
          "baselineState": "unchanged",
          "properties": {
            "ideaSeverity": "WARNING",
            "tags": [
              "ideaSeverity"
            ]
          }
        },
        {
          "ruleId": "DeprecatedIsStillUsed",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Deprecated member 'loadClass' is still used",
            "markdown": "Deprecated member 'loadClass' is still used"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "junit-platform-commons/src/main/java/org/junit/platform/commons/util/ReflectionUtils.java",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 701,
                  "startColumn": 35,
                  "charOffset": 23116,
                  "charLength": 9,
                  "snippet": {
                    "text": "loadClass"
                  },
                  "sourceLanguage": "JAVA"
                },
                "contextRegion": {
                  "startLine": 699,
                  "startColumn": 1,
                  "charOffset": 23027,
                  "charLength": 160,
                  "snippet": {
                    "text": "\t@API(status = DEPRECATED, since = \"1.4\")\n\t@Deprecated\n\tpublic static Optional<Class<?>> loadClass(String name) {\n\t\treturn tryToLoadClass(name).toOptional();\n\t}"
                  }
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "junit5.junit-platform-commons.main",
                  "kind": "module"
                }
              ]
            }
          ],
          "partialFingerprints": {
            "equalIndicator/v1": "2fd43729e472e0cad094fc82df08fb75c017926a4735356f32159edfd6695ca7"
          },
          "baselineState": "unchanged",
          "properties": {
            "ideaSeverity": "WARNING",
            "tags": [
              "ideaSeverity"
            ]
          }
        },
        {
          "ruleId": "DeprecatedIsStillUsed",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Deprecated member 'LegacyReportingUtils' is still used",
            "markdown": "Deprecated member 'LegacyReportingUtils' is still used"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "junit-platform-launcher/src/main/java/org/junit/platform/launcher/listeners/LegacyReportingUtils.java",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 31,
                  "startColumn": 14,
                  "charOffset": 1013,
                  "charLength": 20,
                  "snippet": {
                    "text": "LegacyReportingUtils"
                  },
                  "sourceLanguage": "JAVA"
                },
                "contextRegion": {
                  "startLine": 29,
                  "startColumn": 1,
                  "charOffset": 947,
                  "charLength": 123,
                  "snippet": {
                    "text": "@Deprecated\n@API(status = DEPRECATED, since = \"1.6\")\npublic class LegacyReportingUtils {\n\n\tprivate LegacyReportingUtils() {"
                  }
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "junit5.junit-platform-launcher.main",
                  "kind": "module"
                }
              ]
            }
          ],
          "partialFingerprints": {
            "equalIndicator/v1": "b30add5fc37bf834d38c807acd7ed64123bcadc8492c59874b1c51085ee540ae"
          },
          "baselineState": "unchanged",
          "properties": {
            "ideaSeverity": "WARNING",
            "tags": [
              "ideaSeverity"
            ]
          }
        },
        {
          "ruleId": "RegExpRedundantEscape",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Redundant character escape '\\\\]' in RegExp",
            "markdown": "Redundant character escape `\\\\]` in RegExp"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "junit-platform-commons/src/main/java/org/junit/platform/commons/util/ReflectionUtils.java",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 118,
                  "startColumn": 101,
                  "charOffset": 4002,
                  "charLength": 3,
                  "snippet": {
                    "text": "\\\\]"
                  },
                  "sourceLanguage": "RegExp"
                },
                "contextRegion": {
                  "startLine": 116,
                  "startColumn": 1,
                  "charOffset": 3837,
                  "charLength": 247,
                  "snippet": {
                    "text": "\n\t// Pattern: \"java.lang.String[]\", \"int[]\", \"int[][][][]\", etc.\n\tprivate static final Pattern SOURCE_CODE_SYNTAX_ARRAY_PATTERN = Pattern.compile(\"^([^\\\\[\\\\]]+)((\\\\[\\\\])+)+$\");\n\n\tprivate static final Class<?>[] EMPTY_CLASS_ARRAY = new Class<?>[0];"
                  }
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "junit5.junit-platform-commons.main",
                  "kind": "module"
                }
              ]
            }
          ],
          "partialFingerprints": {
            "equalIndicator/v1": "0c828f3a2350c25f7cb344b25684917cc58316c752e3504306b67756e81e1178"
          },
          "baselineState": "unchanged",
          "properties": {
            "ideaSeverity": "WARNING",
            "tags": [
              "ideaSeverity"
            ]
          }
        },
        {
          "ruleId": "DuplicateBranchesInSwitch",
          "kind": "fail",
          "level": "note",
          "message": {
            "text": "Branch in 'switch' is a duplicate of the default branch",
            "markdown": "Branch in 'switch' is a duplicate of the default branch"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "junit-platform-console/src/main/java/org/junit/platform/console/tasks/ConsoleTestExecutor.java",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 113,
                  "startColumn": 5,
                  "charOffset": 4193,
                  "charLength": 24,
                  "snippet": {
                    "text": "return Optional.empty();"
                  },
                  "sourceLanguage": "JAVA"
                },
                "contextRegion": {
                  "startLine": 111,
                  "startColumn": 1,
                  "charOffset": 4115,
                  "charLength": 190,
                  "snippet": {
                    "text": "\t\t\tcase SUMMARY:\n\t\t\t\t// summary listener is always created and registered\n\t\t\t\treturn Optional.empty();\n\t\t\tcase FLAT:\n\t\t\t\treturn Optional.of(new FlatPrintingListener(out, disableAnsiColors));"
                  }
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "junit5.junit-platform-console.main",
                  "kind": "module"
                }
              ]
            }
          ],
          "partialFingerprints": {
            "equalIndicator/v1": "bddc6022dd86b2ac0d58a55844cdfb350adbdb13028fe5c666c1571961a399eb"
          },
          "baselineState": "unchanged",
          "properties": {
            "ideaSeverity": "WEAK WARNING",
            "tags": [
              "ideaSeverity"
            ]
          }
        },
        {
          "ruleId": "ArrayEquality",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Array objects are compared using '==', not 'Arrays.equals()'",
            "markdown": "Array objects are compared using `==`, not 'Arrays.equals()'"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "junit-jupiter-api/src/main/java/org/junit/jupiter/api/AssertArrayEquals.java",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 252,
                  "startColumn": 16,
                  "charOffset": 8729,
                  "charLength": 2,
                  "snippet": {
                    "text": "=="
                  },
                  "sourceLanguage": "JAVA"
                },
                "contextRegion": {
                  "startLine": 250,
                  "startColumn": 1,
                  "charOffset": 8682,
                  "charLength": 74,
                  "snippet": {
                    "text": "\t\t\tObject messageOrSupplier) {\n\n\t\tif (expected == actual) {\n\t\t\treturn;\n\t\t}"
                  }
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "junit5.junit-jupiter-api.main",
                  "kind": "module"
                }
              ]
            }
          ],
          "partialFingerprints": {
            "equalIndicator/v1": "ee472bb8645cd85b27ec7e897d3a1cb83d70102f00d9a612e99aed4958421601"
          },
          "baselineState": "unchanged",
          "properties": {
            "ideaSeverity": "WARNING",
            "tags": [
              "ideaSeverity"
            ]
          }
        },
        {
          "ruleId": "ArrayEquality",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Array objects are compared using '==', not 'Arrays.equals()'",
            "markdown": "Array objects are compared using `==`, not 'Arrays.equals()'"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "junit-jupiter-api/src/main/java/org/junit/jupiter/api/AssertArrayEquals.java",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 285,
                  "startColumn": 16,
                  "charOffset": 9858,
                  "charLength": 2,
                  "snippet": {
                    "text": "=="
                  },
                  "sourceLanguage": "JAVA"
                },
                "contextRegion": {
                  "startLine": 283,
                  "startColumn": 1,
                  "charOffset": 9800,
                  "charLength": 85,
                  "snippet": {
                    "text": "\n\t\tAssertionUtils.assertValidDelta(delta);\n\t\tif (expected == actual) {\n\t\t\treturn;\n\t\t}"
                  }
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "junit5.junit-jupiter-api.main",
                  "kind": "module"
                }
              ]
            }
          ],
          "partialFingerprints": {
            "equalIndicator/v1": "15c384b27248b4cc784cf5f730a86ed01fbb3b18da7511b42d154b3e65f6a310"
          },
          "baselineState": "unchanged",
          "properties": {
            "ideaSeverity": "WARNING",
            "tags": [
              "ideaSeverity"
            ]
          }
        },
        {
          "ruleId": "ArrayEquality",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Array objects are compared using '==', not 'Arrays.equals()'",
            "markdown": "Array objects are compared using `==`, not 'Arrays.equals()'"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "junit-jupiter-api/src/main/java/org/junit/jupiter/api/AssertArrayEquals.java",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 268,
                  "startColumn": 16,
                  "charOffset": 9251,
                  "charLength": 2,
                  "snippet": {
                    "text": "=="
                  },
                  "sourceLanguage": "JAVA"
                },
                "contextRegion": {
                  "startLine": 266,
                  "startColumn": 1,
                  "charOffset": 9204,
                  "charLength": 74,
                  "snippet": {
                    "text": "\t\t\tObject messageOrSupplier) {\n\n\t\tif (expected == actual) {\n\t\t\treturn;\n\t\t}"
                  }
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "junit5.junit-jupiter-api.main",
                  "kind": "module"
                }
              ]
            }
          ],
          "partialFingerprints": {
            "equalIndicator/v1": "394b544b5c3b087b3be8b1b84082c06c58d0c9a35a0cf1dd382b30be8fe12caf"
          },
          "baselineState": "unchanged",
          "properties": {
            "ideaSeverity": "WARNING",
            "tags": [
              "ideaSeverity"
            ]
          }
        },
        {
          "ruleId": "ArrayEquality",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Array objects are compared using '==', not 'Arrays.equals()'",
            "markdown": "Array objects are compared using `==`, not 'Arrays.equals()'"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "junit-jupiter-api/src/main/java/org/junit/jupiter/api/AssertArrayEquals.java",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 334,
                  "startColumn": 16,
                  "charOffset": 11592,
                  "charLength": 2,
                  "snippet": {
                    "text": "=="
                  },
                  "sourceLanguage": "JAVA"
                },
                "contextRegion": {
                  "startLine": 332,
                  "startColumn": 1,
                  "charOffset": 11545,
                  "charLength": 74,
                  "snippet": {
                    "text": "\t\t\tObject messageOrSupplier) {\n\n\t\tif (expected == actual) {\n\t\t\treturn;\n\t\t}"
                  }
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "junit5.junit-jupiter-api.main",
                  "kind": "module"
                }
              ]
            }
          ],
          "partialFingerprints": {
            "equalIndicator/v1": "a85e73d9b831fedd3ab66002e6d1fc2c17b2f2efc310b126562f1784ab95f4eb"
          },
          "baselineState": "unchanged",
          "properties": {
            "ideaSeverity": "WARNING",
            "tags": [
              "ideaSeverity"
            ]
          }
        },
        {
          "ruleId": "ArrayEquality",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Array objects are compared using '==', not 'Arrays.equals()'",
            "markdown": "Array objects are compared using `==`, not 'Arrays.equals()'"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "junit-jupiter-api/src/main/java/org/junit/jupiter/api/AssertArrayEquals.java",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 220,
                  "startColumn": 16,
                  "charOffset": 7691,
                  "charLength": 2,
                  "snippet": {
                    "text": "=="
                  },
                  "sourceLanguage": "JAVA"
                },
                "contextRegion": {
                  "startLine": 218,
                  "startColumn": 1,
                  "charOffset": 7644,
                  "charLength": 74,
                  "snippet": {
                    "text": "\t\t\tObject messageOrSupplier) {\n\n\t\tif (expected == actual) {\n\t\t\treturn;\n\t\t}"
                  }
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "junit5.junit-jupiter-api.main",
                  "kind": "module"
                }
              ]
            }
          ],
          "partialFingerprints": {
            "equalIndicator/v1": "199655e5aa3a3dc740fb046b2df97ac29aa7a558a2d6015a2b30e80241063c73"
          },
          "baselineState": "unchanged",
          "properties": {
            "ideaSeverity": "WARNING",
            "tags": [
              "ideaSeverity"
            ]
          }
        },
        {
          "ruleId": "ArrayEquality",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Array objects are compared using '==', not 'Arrays.equals()'",
            "markdown": "Array objects are compared using `==`, not 'Arrays.equals()'"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "junit-jupiter-api/src/main/java/org/junit/jupiter/api/AssertArrayEquals.java",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 318,
                  "startColumn": 16,
                  "charOffset": 11030,
                  "charLength": 2,
                  "snippet": {
                    "text": "=="
                  },
                  "sourceLanguage": "JAVA"
                },
                "contextRegion": {
                  "startLine": 316,
                  "startColumn": 1,
                  "charOffset": 10972,
                  "charLength": 85,
                  "snippet": {
                    "text": "\n\t\tAssertionUtils.assertValidDelta(delta);\n\t\tif (expected == actual) {\n\t\t\treturn;\n\t\t}"
                  }
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "junit5.junit-jupiter-api.main",
                  "kind": "module"
                }
              ]
            }
          ],
          "partialFingerprints": {
            "equalIndicator/v1": "8fa604c797236f24fa50224d32f8e9210fd5467050e5c6782075aab6b48dcef8"
          },
          "baselineState": "unchanged",
          "properties": {
            "ideaSeverity": "WARNING",
            "tags": [
              "ideaSeverity"
            ]
          }
        },
        {
          "ruleId": "ArrayEquality",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Array objects are compared using '==', not 'Arrays.equals()'",
            "markdown": "Array objects are compared using `==`, not 'Arrays.equals()'"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "junit-jupiter-api/src/main/java/org/junit/jupiter/api/AssertArrayEquals.java",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 301,
                  "startColumn": 16,
                  "charOffset": 10419,
                  "charLength": 2,
                  "snippet": {
                    "text": "=="
                  },
                  "sourceLanguage": "JAVA"
                },
                "contextRegion": {
                  "startLine": 299,
                  "startColumn": 1,
                  "charOffset": 10372,
                  "charLength": 74,
                  "snippet": {
                    "text": "\t\t\tObject messageOrSupplier) {\n\n\t\tif (expected == actual) {\n\t\t\treturn;\n\t\t}"
                  }
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "junit5.junit-jupiter-api.main",
                  "kind": "module"
                }
              ]
            }
          ],
          "partialFingerprints": {
            "equalIndicator/v1": "360474050579ec684bdfc6696e9cf1dc90d777c493d85a6d746b5a5ab237bba3"
          },
          "baselineState": "unchanged",
          "properties": {
            "ideaSeverity": "WARNING",
            "tags": [
              "ideaSeverity"
            ]
          }
        },
        {
          "ruleId": "ArrayEquality",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Array objects are compared using '==', not 'Arrays.equals()'",
            "markdown": "Array objects are compared using `==`, not 'Arrays.equals()'"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "junit-jupiter-api/src/main/java/org/junit/jupiter/api/AssertArrayEquals.java",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 236,
                  "startColumn": 16,
                  "charOffset": 8209,
                  "charLength": 2,
                  "snippet": {
                    "text": "=="
                  },
                  "sourceLanguage": "JAVA"
                },
                "contextRegion": {
                  "startLine": 234,
                  "startColumn": 1,
                  "charOffset": 8162,
                  "charLength": 74,
                  "snippet": {
                    "text": "\t\t\tObject messageOrSupplier) {\n\n\t\tif (expected == actual) {\n\t\t\treturn;\n\t\t}"
                  }
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "junit5.junit-jupiter-api.main",
                  "kind": "module"
                }
              ]
            }
          ],
          "partialFingerprints": {
            "equalIndicator/v1": "f1606401522774519b40628990f240c3a1b24e30bc0501a987083f426e607a66"
          },
          "baselineState": "unchanged",
          "properties": {
            "ideaSeverity": "WARNING",
            "tags": [
              "ideaSeverity"
            ]
          }
        },
        {
          "ruleId": "ArrayEquality",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Array objects are compared using '==', not 'Arrays.equals()'",
            "markdown": "Array objects are compared using `==`, not 'Arrays.equals()'"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "junit-jupiter-api/src/main/java/org/junit/jupiter/api/AssertArrayEquals.java",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 172,
                  "startColumn": 16,
                  "charOffset": 6129,
                  "charLength": 2,
                  "snippet": {
                    "text": "=="
                  },
                  "sourceLanguage": "JAVA"
                },
                "contextRegion": {
                  "startLine": 170,
                  "startColumn": 1,
                  "charOffset": 6082,
                  "charLength": 74,
                  "snippet": {
                    "text": "\t\t\tObject messageOrSupplier) {\n\n\t\tif (expected == actual) {\n\t\t\treturn;\n\t\t}"
                  }
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "junit5.junit-jupiter-api.main",
                  "kind": "module"
                }
              ]
            }
          ],
          "partialFingerprints": {
            "equalIndicator/v1": "8b3879e71acb57d94f4a618e0438856a66200fd3eaddbad9f1e465e4e61d0487"
          },
          "baselineState": "unchanged",
          "properties": {
            "ideaSeverity": "WARNING",
            "tags": [
              "ideaSeverity"
            ]
          }
        },
        {
          "ruleId": "ArrayEquality",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Array objects are compared using '==', not 'Arrays.equals()'",
            "markdown": "Array objects are compared using `==`, not 'Arrays.equals()'"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "junit-jupiter-api/src/main/java/org/junit/jupiter/api/AssertArrayEquals.java",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 188,
                  "startColumn": 16,
                  "charOffset": 6649,
                  "charLength": 2,
                  "snippet": {
                    "text": "=="
                  },
                  "sourceLanguage": "JAVA"
                },
                "contextRegion": {
                  "startLine": 186,
                  "startColumn": 1,
                  "charOffset": 6602,
                  "charLength": 74,
                  "snippet": {
                    "text": "\t\t\tObject messageOrSupplier) {\n\n\t\tif (expected == actual) {\n\t\t\treturn;\n\t\t}"
                  }
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "junit5.junit-jupiter-api.main",
                  "kind": "module"
                }
              ]
            }
          ],
          "partialFingerprints": {
            "equalIndicator/v1": "ec9fbdf400ec12f427486f45c67dfd504ce68c42dd4a3cd40d5666c2fa28b042"
          },
          "baselineState": "unchanged",
          "properties": {
            "ideaSeverity": "WARNING",
            "tags": [
              "ideaSeverity"
            ]
          }
        },
        {
          "ruleId": "ArrayEquality",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Array objects are compared using '==', not 'Arrays.equals()'",
            "markdown": "Array objects are compared using `==`, not 'Arrays.equals()'"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "junit-jupiter-api/src/main/java/org/junit/jupiter/api/AssertArrayEquals.java",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 204,
                  "startColumn": 16,
                  "charOffset": 7169,
                  "charLength": 2,
                  "snippet": {
                    "text": "=="
                  },
                  "sourceLanguage": "JAVA"
                },
                "contextRegion": {
                  "startLine": 202,
                  "startColumn": 1,
                  "charOffset": 7122,
                  "charLength": 74,
                  "snippet": {
                    "text": "\t\t\tObject messageOrSupplier) {\n\n\t\tif (expected == actual) {\n\t\t\treturn;\n\t\t}"
                  }
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "junit5.junit-jupiter-api.main",
                  "kind": "module"
                }
              ]
            }
          ],
          "partialFingerprints": {
            "equalIndicator/v1": "da083b35ba449520b66a13cf560976a0933bc1affdebd30c15c5b38c731084ea"
          },
          "baselineState": "unchanged",
          "properties": {
            "ideaSeverity": "WARNING",
            "tags": [
              "ideaSeverity"
            ]
          }
        },
        {
          "ruleId": "CollectionAddAllCanBeReplacedWithConstructor",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "'addAll()' call can be replaced with parametrized constructor call",
            "markdown": "'addAll()' call can be replaced with parametrized constructor call"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "junit-platform-engine/src/main/java/org/junit/platform/engine/TestDescriptor.java",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 119,
                  "startColumn": 15,
                  "charOffset": 3545,
                  "charLength": 6,
                  "snippet": {
                    "text": "addAll"
                  },
                  "sourceLanguage": "JAVA"
                },
                "contextRegion": {
                  "startLine": 117,
                  "startColumn": 1,
                  "charOffset": 3414,
                  "charLength": 247,
                  "snippet": {
                    "text": "\tdefault Set<? extends TestDescriptor> getDescendants() {\n\t\tSet<TestDescriptor> descendants = new LinkedHashSet<>();\n\t\tdescendants.addAll(getChildren());\n\t\tfor (TestDescriptor child : getChildren()) {\n\t\t\tdescendants.addAll(child.getDescendants());"
                  }
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "junit5.junit-platform-engine.main",
                  "kind": "module"
                }
              ]
            }
          ],
          "partialFingerprints": {
            "equalIndicator/v1": "6cd8dd765c49855197b4cffeed49f7e8b1c93a3bd3fe164b389bb47c6f4a3da6"
          },
          "baselineState": "unchanged",
          "properties": {
            "ideaSeverity": "WARNING",
            "tags": [
              "ideaSeverity"
            ]
          }
        },
        {
          "ruleId": "ObjectToString",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Call to default 'toString()' on 'testPlan'",
            "markdown": "Call to default 'toString()' on `testPlan`"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "junit-platform-console/src/main/java/org/junit/platform/console/tasks/TreePrintingListener.java",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 51,
                  "startColumn": 23,
                  "charOffset": 1701,
                  "charLength": 8,
                  "snippet": {
                    "text": "testPlan"
                  },
                  "sourceLanguage": "JAVA"
                },
                "contextRegion": {
                  "startLine": 49,
                  "startColumn": 1,
                  "charOffset": 1609,
                  "charLength": 117,
                  "snippet": {
                    "text": "\t@Override\n\tpublic void testPlanExecutionStarted(TestPlan testPlan) {\n\t\troot = new TreeNode(testPlan.toString());\n\t}\n"
                  }
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "junit5.junit-platform-console.main",
                  "kind": "module"
                }
              ]
            }
          ],
          "partialFingerprints": {
            "equalIndicator/v1": "8b919c69eeef73814e5889fc101ee9fcb41ed2130ec8b2c3b8e332f032cfd499"
          },
          "baselineState": "unchanged",
          "properties": {
            "ideaSeverity": "WARNING",
            "tags": [
              "ideaSeverity"
            ]
          }
        },
        {
          "ruleId": "ObjectToString",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Call to default 'toString()' on 'testPlan'",
            "markdown": "Call to default 'toString()' on `testPlan`"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "junit-platform-launcher/src/main/java/org/junit/platform/launcher/core/TestExecutionListenerRegistry.java",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 122,
                  "startColumn": 42,
                  "charOffset": 4638,
                  "charLength": 8,
                  "snippet": {
                    "text": "testPlan"
                  },
                  "sourceLanguage": "JAVA"
                },
                "contextRegion": {
                  "startLine": 120,
                  "startColumn": 1,
                  "charOffset": 4440,
                  "charLength": 219,
                  "snippet": {
                    "text": "\t\tpublic void testPlanExecutionFinished(TestPlan testPlan) {\n\t\t\tnotifyEach(testExecutionListeners, listener -> listener.testPlanExecutionFinished(testPlan),\n\t\t\t\t() -> \"testPlanExecutionFinished(\" + testPlan + \")\");\n\t\t}\n"
                  }
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "junit5.junit-platform-launcher.main",
                  "kind": "module"
                }
              ]
            }
          ],
          "partialFingerprints": {
            "equalIndicator/v1": "c59fa6d313474724e75e32fe3e1ca7380533e8c240c12c6f40bfc8744814b4bf"
          },
          "baselineState": "unchanged",
          "properties": {
            "ideaSeverity": "WARNING",
            "tags": [
              "ideaSeverity"
            ]
          }
        },
        {
          "ruleId": "ObjectToString",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Call to default 'toString()' on 'testPlan'",
            "markdown": "Call to default 'toString()' on `testPlan`"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "junit-platform-launcher/src/main/java/org/junit/platform/launcher/core/TestExecutionListenerRegistry.java",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 116,
                  "startColumn": 41,
                  "charOffset": 4406,
                  "charLength": 8,
                  "snippet": {
                    "text": "testPlan"
                  },
                  "sourceLanguage": "JAVA"
                },
                "contextRegion": {
                  "startLine": 114,
                  "startColumn": 1,
                  "charOffset": 4211,
                  "charLength": 216,
                  "snippet": {
                    "text": "\t\tpublic void testPlanExecutionStarted(TestPlan testPlan) {\n\t\t\tnotifyEach(testExecutionListeners, listener -> listener.testPlanExecutionStarted(testPlan),\n\t\t\t\t() -> \"testPlanExecutionStarted(\" + testPlan + \")\");\n\t\t}\n"
                  }
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "junit5.junit-platform-launcher.main",
                  "kind": "module"
                }
              ]
            }
          ],
          "partialFingerprints": {
            "equalIndicator/v1": "58ecf181aedf00c42e1c8513e9543d47c843cf05c32f500c73386e821453dffd"
          },
          "baselineState": "unchanged",
          "properties": {
            "ideaSeverity": "WARNING",
            "tags": [
              "ideaSeverity"
            ]
          }
        },
        {
          "ruleId": "ConstantConditions",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Dereference of 'ExceptionUtils.throwAsUncheckedException(throwable)' may produce 'NullPointerException'",
            "markdown": "Dereference of `ExceptionUtils.throwAsUncheckedException(throwable)` may produce `NullPointerException`"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "junit-jupiter-api/src/main/java/org/junit/jupiter/api/AssertTimeout.java",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 135,
                  "startColumn": 12,
                  "charOffset": 4429,
                  "charLength": 51,
                  "snippet": {
                    "text": "ExceptionUtils.throwAsUncheckedException(throwable)"
                  },
                  "sourceLanguage": "JAVA"
                },
                "contextRegion": {
                  "startLine": 133,
                  "startColumn": 1,
                  "charOffset": 4378,
                  "charLength": 116,
                  "snippet": {
                    "text": "\t\t\t\t}\n\t\t\t\tcatch (Throwable throwable) {\n\t\t\t\t\tthrow ExceptionUtils.throwAsUncheckedException(throwable);\n\t\t\t\t}\n\t\t\t});"
                  }
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "junit5.junit-jupiter-api.main",
                  "kind": "module"
                }
              ]
            }
          ],
          "partialFingerprints": {
            "equalIndicator/v1": "a559b8d9dd3da28db6499e0177812db639ddd9e3a28dbb34dbb5691966132ac3"
          },
          "baselineState": "unchanged",
          "properties": {
            "ideaSeverity": "WARNING",
            "tags": [
              "ideaSeverity"
            ]
          }
        },
        {
          "ruleId": "ConstantConditions",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Dereference of 'ExceptionUtils.throwAsUncheckedException(ex.getCause())' may produce 'NullPointerException'",
            "markdown": "Dereference of `ExceptionUtils.throwAsUncheckedException(ex.getCause())` may produce `NullPointerException`"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "junit-jupiter-api/src/main/java/org/junit/jupiter/api/AssertTimeout.java",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 148,
                  "startColumn": 11,
                  "charOffset": 4846,
                  "charLength": 55,
                  "snippet": {
                    "text": "ExceptionUtils.throwAsUncheckedException(ex.getCause())"
                  },
                  "sourceLanguage": "JAVA"
                },
                "contextRegion": {
                  "startLine": 146,
                  "startColumn": 1,
                  "charOffset": 4796,
                  "charLength": 137,
                  "snippet": {
                    "text": "\t\t\t}\n\t\t\tcatch (ExecutionException ex) {\n\t\t\t\tthrow ExceptionUtils.throwAsUncheckedException(ex.getCause());\n\t\t\t}\n\t\t\tcatch (Throwable ex) {"
                  }
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "junit5.junit-jupiter-api.main",
                  "kind": "module"
                }
              ]
            }
          ],
          "partialFingerprints": {
            "equalIndicator/v1": "9a87af6bc0550d063b7d917aafb4b847cec81ec04bc12a4bd5a091456ff10f26"
          },
          "baselineState": "unchanged",
          "properties": {
            "ideaSeverity": "WARNING",
            "tags": [
              "ideaSeverity"
            ]
          }
        },
        {
          "ruleId": "ConstantConditions",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Dereference of 'ExceptionUtils.throwAsUncheckedException(ex)' may produce 'NullPointerException'",
            "markdown": "Dereference of `ExceptionUtils.throwAsUncheckedException(ex)` may produce `NullPointerException`"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "junit-jupiter-api/src/main/java/org/junit/jupiter/api/AssertTimeout.java",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 151,
                  "startColumn": 11,
                  "charOffset": 4944,
                  "charLength": 44,
                  "snippet": {
                    "text": "ExceptionUtils.throwAsUncheckedException(ex)"
                  },
                  "sourceLanguage": "JAVA"
                },
                "contextRegion": {
                  "startLine": 149,
                  "startColumn": 1,
                  "charOffset": 4903,
                  "charLength": 95,
                  "snippet": {
                    "text": "\t\t\t}\n\t\t\tcatch (Throwable ex) {\n\t\t\t\tthrow ExceptionUtils.throwAsUncheckedException(ex);\n\t\t\t}\n\t\t}"
                  }
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "junit5.junit-jupiter-api.main",
                  "kind": "module"
                }
              ]
            }
          ],
          "partialFingerprints": {
            "equalIndicator/v1": "32361a8fd2e41bbcaa6dda94d662068cb7c08744844ab105827c8bb026a6588a"
          },
          "baselineState": "unchanged",
          "properties": {
            "ideaSeverity": "WARNING",
            "tags": [
              "ideaSeverity"
            ]
          }
        },
        {
          "ruleId": "ConstantConditions",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Method invocation 'getActualTypeArguments' may produce 'NullPointerException'",
            "markdown": "Method invocation `getActualTypeArguments` may produce `NullPointerException`"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "junit-jupiter-api/src/main/java/org/junit/jupiter/api/extension/support/TypeBasedParameterResolver.java",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 60,
                  "startColumn": 47,
                  "charOffset": 2275,
                  "charLength": 22,
                  "snippet": {
                    "text": "getActualTypeArguments"
                  },
                  "sourceLanguage": "JAVA"
                },
                "contextRegion": {
                  "startLine": 58,
                  "startColumn": 1,
                  "charOffset": 2119,
                  "charLength": 188,
                  "snippet": {
                    "text": "\t\t\t\t\t\t+ \"potentially caused by lacking parameterized type in class declaration.\",\n\t\t\t\tgetClass().getName()));\n\t\treturn typeBasedParameterResolverSuperclass.getActualTypeArguments()[0];\n\t}\n"
                  }
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "junit5.junit-jupiter-api.main",
                  "kind": "module"
                }
              ]
            }
          ],
          "partialFingerprints": {
            "equalIndicator/v1": "5814703e1d6e56c577601c6811997c2439d21b69af7402a8f28a7875990d8f68"
          },
          "baselineState": "unchanged",
          "properties": {
            "ideaSeverity": "WARNING",
            "tags": [
              "ideaSeverity"
            ]
          }
        },
        {
          "ruleId": "ConstantConditions",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Dereference of 'ExceptionUtils.throwAsUncheckedException(t)' may produce 'NullPointerException'",
            "markdown": "Dereference of `ExceptionUtils.throwAsUncheckedException(t)` may produce `NullPointerException`"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "junit-jupiter-engine/src/main/java/org/junit/jupiter/engine/execution/InvocationInterceptorChain.java",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 67,
                  "startColumn": 10,
                  "charOffset": 2477,
                  "charLength": 43,
                  "snippet": {
                    "text": "ExceptionUtils.throwAsUncheckedException(t)"
                  },
                  "sourceLanguage": "JAVA"
                },
                "contextRegion": {
                  "startLine": 65,
                  "startColumn": 1,
                  "charOffset": 2440,
                  "charLength": 88,
                  "snippet": {
                    "text": "\t\t}\n\t\tcatch (Throwable t) {\n\t\t\tthrow ExceptionUtils.throwAsUncheckedException(t);\n\t\t}\n\t}"
                  }
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "junit5.junit-jupiter-engine.main",
                  "kind": "module"
                }
              ]
            }
          ],
          "partialFingerprints": {
            "equalIndicator/v1": "57da655fcd45c64c6bfbd3759b99a4b9d813610fb255a7fdff1e5519f2ea52ba"
          },
          "baselineState": "unchanged",
          "properties": {
            "ideaSeverity": "WARNING",
            "tags": [
              "ideaSeverity"
            ]
          }
        },
        {
          "ruleId": "ConstantConditions",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Dereference of 'ExceptionUtils.throwAsUncheckedException(e)' may produce 'NullPointerException'",
            "markdown": "Dereference of `ExceptionUtils.throwAsUncheckedException(e)` may produce `NullPointerException`"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "junit-jupiter-params/src/main/java/org/junit/jupiter/params/ParameterizedTestExtension.java",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 136,
                  "startColumn": 10,
                  "charOffset": 5652,
                  "charLength": 43,
                  "snippet": {
                    "text": "ExceptionUtils.throwAsUncheckedException(e)"
                  },
                  "sourceLanguage": "JAVA"
                },
                "contextRegion": {
                  "startLine": 134,
                  "startColumn": 1,
                  "charOffset": 5615,
                  "charLength": 88,
                  "snippet": {
                    "text": "\t\t}\n\t\tcatch (Exception e) {\n\t\t\tthrow ExceptionUtils.throwAsUncheckedException(e);\n\t\t}\n\t}"
                  }
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "junit5.junit-jupiter-params.main",
                  "kind": "module"
                }
              ]
            }
          ],
          "partialFingerprints": {
            "equalIndicator/v1": "00977ed92563393da77f5e777eaace7588585ec07874d7b99e8a3d3b433ad113"
          },
          "baselineState": "unchanged",
          "properties": {
            "ideaSeverity": "WARNING",
            "tags": [
              "ideaSeverity"
            ]
          }
        },
        {
          "ruleId": "ConstantConditions",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "The call to 'assumeFalse' always fails, according to its method contracts",
            "markdown": "The call to 'assumeFalse' always fails, according to its method contracts"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "junit-vintage-engine/src/testFixtures/java/org/junit/vintage/engine/samples/junit4/PlainJUnit4TestCaseWithFiveTestMethods.java",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 36,
                  "startColumn": 3,
                  "charOffset": 1134,
                  "charLength": 11,
                  "snippet": {
                    "text": "assumeFalse"
                  },
                  "sourceLanguage": "JAVA"
                },
                "contextRegion": {
                  "startLine": 34,
                  "startColumn": 1,
                  "charOffset": 1096,
                  "charLength": 91,
                  "snippet": {
                    "text": "\t@Test\n\tpublic void abortedTest() {\n\t\tassumeFalse(\"this test should be aborted\", true);\n\t}\n"
                  }
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "junit5.junit-vintage-engine.testFixtures",
                  "kind": "module"
                }
              ]
            }
          ],
          "partialFingerprints": {
            "equalIndicator/v1": "51159596e8b4b5f745759449eef54c6176163434a3ce1cfce0225c9b993755b7"
          },
          "baselineState": "unchanged",
          "properties": {
            "ideaSeverity": "WARNING",
            "tags": [
              "ideaSeverity"
            ]
          }
        },
        {
          "ruleId": "ConstantConditions",
          "kind": "fail",
          "level": "note",
          "message": {
            "text": "Value 'inherited' is always 'true'",
            "markdown": "Value `inherited` is always 'true'"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "junit-platform-commons/src/main/java/org/junit/platform/commons/util/AnnotationUtils.java",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 236,
                  "startColumn": 75,
                  "charOffset": 8622,
                  "charLength": 9,
                  "snippet": {
                    "text": "inherited"
                  },
                  "sourceLanguage": "JAVA"
                },
                "contextRegion": {
                  "startLine": 234,
                  "startColumn": 1,
                  "charOffset": 8439,
                  "charLength": 221,
                  "snippet": {
                    "text": "\t\t\t\tClass<?> superclass = clazz.getSuperclass();\n\t\t\t\tif (superclass != null && superclass != Object.class) {\n\t\t\t\t\tfindRepeatableAnnotations(superclass, annotationType, containerType, inherited, found, visited);\n\t\t\t\t}\n\t\t\t}"
                  }
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "junit5.junit-platform-commons.main",
                  "kind": "module"
                }
              ]
            }
          ],
          "partialFingerprints": {
            "equalIndicator/v1": "ffa9019b2a23cafa9b329395fd0fbf2b423b49b6e7a1c7bac1dcca3dc5b17a5a"
          },
          "baselineState": "unchanged",
          "properties": {
            "ideaSeverity": "WEAK WARNING",
            "tags": [
              "ideaSeverity"
            ]
          }
        },
        {
          "ruleId": "ConstantConditions",
          "kind": "fail",
          "level": "note",
          "message": {
            "text": "Value 'inherited' is always 'true'",
            "markdown": "Value `inherited` is always 'true'"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "junit-platform-commons/src/main/java/org/junit/platform/commons/util/AnnotationUtils.java",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 158,
                  "startColumn": 86,
                  "charOffset": 5494,
                  "charLength": 9,
                  "snippet": {
                    "text": "inherited"
                  },
                  "sourceLanguage": "JAVA"
                },
                "contextRegion": {
                  "startLine": 156,
                  "startColumn": 1,
                  "charOffset": 5300,
                  "charLength": 298,
                  "snippet": {
                    "text": "\t\t\t\tClass<?> superclass = clazz.getSuperclass();\n\t\t\t\tif (superclass != null && superclass != Object.class) {\n\t\t\t\t\tOptional<A> annotationOnSuperclass = findAnnotation(superclass, annotationType, inherited, visited);\n\t\t\t\t\tif (annotationOnSuperclass.isPresent()) {\n\t\t\t\t\t\treturn annotationOnSuperclass;"
                  }
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "junit5.junit-platform-commons.main",
                  "kind": "module"
                }
              ]
            }
          ],
          "partialFingerprints": {
            "equalIndicator/v1": "4523d44aef6d6773ea6efee314464a854f75007b2a603b2156201f9f0f8b1e74"
          },
          "baselineState": "unchanged",
          "properties": {
            "ideaSeverity": "WEAK WARNING",
            "tags": [
              "ideaSeverity"
            ]
          }
        },
        {
          "ruleId": "ConstantConditions",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Dereference of 'ExceptionUtils.throwAsUncheckedException(t)' may produce 'NullPointerException'",
            "markdown": "Dereference of `ExceptionUtils.throwAsUncheckedException(t)` may produce `NullPointerException`"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "junit-platform-commons/src/main/java/org/junit/platform/commons/util/ReflectionUtils.java",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 935,
                  "startColumn": 13,
                  "charOffset": 32491,
                  "charLength": 43,
                  "snippet": {
                    "text": "ExceptionUtils.throwAsUncheckedException(t)"
                  },
                  "sourceLanguage": "JAVA"
                },
                "contextRegion": {
                  "startLine": 933,
                  "startColumn": 1,
                  "charOffset": 32445,
                  "charLength": 105,
                  "snippet": {
                    "text": "\t\t\t\t\t}\n\t\t\t\t\tcatch (Throwable t) {\n\t\t\t\t\t\tthrow ExceptionUtils.throwAsUncheckedException(t);\n\t\t\t\t\t}\n\t\t\t\t});"
                  }
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "junit5.junit-platform-commons.main",
                  "kind": "module"
                }
              ]
            }
          ],
          "partialFingerprints": {
            "equalIndicator/v1": "f34e699055815c25bfb355c51ff3485256676dc35e036c1377136e5ccbdbd279"
          },
          "baselineState": "unchanged",
          "properties": {
            "ideaSeverity": "WARNING",
            "tags": [
              "ideaSeverity"
            ]
          }
        },
        {
          "ruleId": "ConstantConditions",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Dereference of 'ExceptionUtils.throwAsUncheckedException(getUnderlyingCause(t))' may produce 'NullPointerException'",
            "markdown": "Dereference of `ExceptionUtils.throwAsUncheckedException(getUnderlyingCause(t))` may produce `NullPointerException`"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "junit-platform-commons/src/main/java/org/junit/platform/commons/util/ReflectionUtils.java",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 1105,
                  "startColumn": 10,
                  "charOffset": 38640,
                  "charLength": 63,
                  "snippet": {
                    "text": "ExceptionUtils.throwAsUncheckedException(getUnderlyingCause(t))"
                  },
                  "sourceLanguage": "JAVA"
                },
                "contextRegion": {
                  "startLine": 1103,
                  "startColumn": 1,
                  "charOffset": 38603,
                  "charLength": 108,
                  "snippet": {
                    "text": "\t\t}\n\t\tcatch (Throwable t) {\n\t\t\tthrow ExceptionUtils.throwAsUncheckedException(getUnderlyingCause(t));\n\t\t}\n\t}"
                  }
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "junit5.junit-platform-commons.main",
                  "kind": "module"
                }
              ]
            }
          ],
          "partialFingerprints": {
            "equalIndicator/v1": "72ced607eacf2ec6b0a255db125ba3e29a5c2f1156f39ada8ca6129c926c3297"
          },
          "baselineState": "unchanged",
          "properties": {
            "ideaSeverity": "WARNING",
            "tags": [
              "ideaSeverity"
            ]
          }
        },
        {
          "ruleId": "ConstantConditions",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Dereference of 'ExceptionUtils.throwAsUncheckedException(getUnderlyingCause(t))' may produce 'NullPointerException'",
            "markdown": "Dereference of `ExceptionUtils.throwAsUncheckedException(getUnderlyingCause(t))` may produce `NullPointerException`"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "junit-platform-commons/src/main/java/org/junit/platform/commons/util/ReflectionUtils.java",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 516,
                  "startColumn": 10,
                  "charOffset": 15761,
                  "charLength": 63,
                  "snippet": {
                    "text": "ExceptionUtils.throwAsUncheckedException(getUnderlyingCause(t))"
                  },
                  "sourceLanguage": "JAVA"
                },
                "contextRegion": {
                  "startLine": 514,
                  "startColumn": 1,
                  "charOffset": 15724,
                  "charLength": 108,
                  "snippet": {
                    "text": "\t\t}\n\t\tcatch (Throwable t) {\n\t\t\tthrow ExceptionUtils.throwAsUncheckedException(getUnderlyingCause(t));\n\t\t}\n\t}"
                  }
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "junit5.junit-platform-commons.main",
                  "kind": "module"
                }
              ]
            }
          ],
          "partialFingerprints": {
            "equalIndicator/v1": "c0b084c8e8061f18e5ff1ee8aed4c3edd26f9b6f93f473a339a768a70aaa150a"
          },
          "baselineState": "unchanged",
          "properties": {
            "ideaSeverity": "WARNING",
            "tags": [
              "ideaSeverity"
            ]
          }
        },
        {
          "ruleId": "ConstantConditions",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Dereference of 'ExceptionUtils.throwAsUncheckedException(getUnderlyingCause(t))' may produce 'NullPointerException'",
            "markdown": "Dereference of `ExceptionUtils.throwAsUncheckedException(getUnderlyingCause(t))` may produce `NullPointerException`"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "junit-platform-commons/src/main/java/org/junit/platform/commons/util/ReflectionUtils.java",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 691,
                  "startColumn": 10,
                  "charOffset": 22796,
                  "charLength": 63,
                  "snippet": {
                    "text": "ExceptionUtils.throwAsUncheckedException(getUnderlyingCause(t))"
                  },
                  "sourceLanguage": "JAVA"
                },
                "contextRegion": {
                  "startLine": 689,
                  "startColumn": 1,
                  "charOffset": 22759,
                  "charLength": 108,
                  "snippet": {
                    "text": "\t\t}\n\t\tcatch (Throwable t) {\n\t\t\tthrow ExceptionUtils.throwAsUncheckedException(getUnderlyingCause(t));\n\t\t}\n\t}"
                  }
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "junit5.junit-platform-commons.main",
                  "kind": "module"
                }
              ]
            }
          ],
          "partialFingerprints": {
            "equalIndicator/v1": "7ff31e107ea154e21ca045dabaefab3259bc0c6d6087176ba1001cbdf80a3c94"
          },
          "baselineState": "unchanged",
          "properties": {
            "ideaSeverity": "WARNING",
            "tags": [
              "ideaSeverity"
            ]
          }
        },
        {
          "ruleId": "ConstantConditions",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Dereference of 'ExceptionUtils.throwAsUncheckedException(getUnderlyingCause(t))' may produce 'NullPointerException'",
            "markdown": "Dereference of `ExceptionUtils.throwAsUncheckedException(getUnderlyingCause(t))` may produce `NullPointerException`"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "junit-platform-commons/src/main/java/org/junit/platform/commons/util/ReflectionUtils.java",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 1136,
                  "startColumn": 10,
                  "charOffset": 39864,
                  "charLength": 63,
                  "snippet": {
                    "text": "ExceptionUtils.throwAsUncheckedException(getUnderlyingCause(t))"
                  },
                  "sourceLanguage": "JAVA"
                },
                "contextRegion": {
                  "startLine": 1134,
                  "startColumn": 1,
                  "charOffset": 39827,
                  "charLength": 108,
                  "snippet": {
                    "text": "\t\t}\n\t\tcatch (Throwable t) {\n\t\t\tthrow ExceptionUtils.throwAsUncheckedException(getUnderlyingCause(t));\n\t\t}\n\t}"
                  }
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "junit5.junit-platform-commons.main",
                  "kind": "module"
                }
              ]
            }
          ],
          "partialFingerprints": {
            "equalIndicator/v1": "3ec6a82388e19ccf80adb3b398daa26868650dc2bf28cefa36be648dbe729dd0"
          },
          "baselineState": "unchanged",
          "properties": {
            "ideaSeverity": "WARNING",
            "tags": [
              "ideaSeverity"
            ]
          }
        },
        {
          "ruleId": "ConstantConditions",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Dereference of 'ExceptionUtils.throwAsUncheckedException(getUnderlyingCause(t))' may produce 'NullPointerException'",
            "markdown": "Dereference of `ExceptionUtils.throwAsUncheckedException(getUnderlyingCause(t))` may produce `NullPointerException`"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "junit-platform-commons/src/main/java/org/junit/platform/commons/util/ReflectionUtils.java",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 491,
                  "startColumn": 10,
                  "charOffset": 14837,
                  "charLength": 63,
                  "snippet": {
                    "text": "ExceptionUtils.throwAsUncheckedException(getUnderlyingCause(t))"
                  },
                  "sourceLanguage": "JAVA"
                },
                "contextRegion": {
                  "startLine": 489,
                  "startColumn": 1,
                  "charOffset": 14800,
                  "charLength": 108,
                  "snippet": {
                    "text": "\t\t}\n\t\tcatch (Throwable t) {\n\t\t\tthrow ExceptionUtils.throwAsUncheckedException(getUnderlyingCause(t));\n\t\t}\n\t}"
                  }
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "junit5.junit-platform-commons.main",
                  "kind": "module"
                }
              ]
            }
          ],
          "partialFingerprints": {
            "equalIndicator/v1": "6ecd8a855d2499122add9058d1d37628c7992f702472ad4914e81c3b802ea8f8"
          },
          "baselineState": "unchanged",
          "properties": {
            "ideaSeverity": "WARNING",
            "tags": [
              "ideaSeverity"
            ]
          }
        },
        {
          "ruleId": "ConstantConditions",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Argument 'parentTrace' might be null",
            "markdown": "Argument `parentTrace` might be null"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "junit-platform-launcher/src/main/java/org/junit/platform/launcher/listeners/MutableTestExecutionSummary.java",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 251,
                  "startColumn": 48,
                  "charOffset": 7423,
                  "charLength": 11,
                  "snippet": {
                    "text": "parentTrace"
                  },
                  "sourceLanguage": "JAVA"
                },
                "contextRegion": {
                  "startLine": 249,
                  "startColumn": 1,
                  "charOffset": 7309,
                  "charLength": 257,
                  "snippet": {
                    "text": "\t\t\twriter.printf(\"%s%s%s%n\", indentation, caption, throwable);\n\t\t}\n\t\tint duplicates = numberOfCommonFrames(trace, parentTrace);\n\t\tint numDistinctFrames = trace.length - duplicates;\n\t\tint numDisplayLines = (numDistinctFrames > max) ? max : numDistinctFrames;"
                  }
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "junit5.junit-platform-launcher.main",
                  "kind": "module"
                }
              ]
            }
          ],
          "partialFingerprints": {
            "equalIndicator/v1": "833e5753c5ec8f04ba028398f412b2e1e21e7bdd886e819ca4120d23add7ca29"
          },
          "baselineState": "unchanged",
          "properties": {
            "ideaSeverity": "WARNING",
            "tags": [
              "ideaSeverity"
            ]
          }
        },
        {
          "ruleId": "ConstantConditions",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Dereference of 'ExceptionUtils.throwAsUncheckedException(exception)' may produce 'NullPointerException'",
            "markdown": "Dereference of `ExceptionUtils.throwAsUncheckedException(exception)` may produce `NullPointerException`"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "junit-jupiter-migrationsupport/src/main/java/org/junit/jupiter/migrationsupport/rules/member/TestRuleAnnotatedField.java",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 37,
                  "startColumn": 10,
                  "charOffset": 1132,
                  "charLength": 51,
                  "snippet": {
                    "text": "ExceptionUtils.throwAsUncheckedException(exception)"
                  },
                  "sourceLanguage": "JAVA"
                },
                "contextRegion": {
                  "startLine": 35,
                  "startColumn": 1,
                  "charOffset": 1074,
                  "charLength": 117,
                  "snippet": {
                    "text": "\t\t}\n\t\tcatch (IllegalAccessException exception) {\n\t\t\tthrow ExceptionUtils.throwAsUncheckedException(exception);\n\t\t}\n\t}"
                  }
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "junit5.junit-jupiter-migrationsupport.main",
                  "kind": "module"
                }
              ]
            }
          ],
          "partialFingerprints": {
            "equalIndicator/v1": "75cdefc2c5035616b082daee8aa24fc240801d391c4373f2ae53ee43b1ab375f"
          },
          "baselineState": "unchanged",
          "properties": {
            "ideaSeverity": "WARNING",
            "tags": [
              "ideaSeverity"
            ]
          }
        },
        {
          "ruleId": "RegExpUnnecessaryNonCapturingGroup",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Unnecessary non-capturing group '(?:[nμm]?s)'",
            "markdown": "Unnecessary non-capturing group `(?:[nμm]?s)`"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "junit-jupiter-engine/src/main/java/org/junit/jupiter/engine/extension/TimeoutDurationParser.java",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 37,
                  "startColumn": 72,
                  "charOffset": 1227,
                  "charLength": 3,
                  "snippet": {
                    "text": "(?:"
                  },
                  "sourceLanguage": "RegExp"
                },
                "contextRegion": {
                  "startLine": 35,
                  "startColumn": 1,
                  "charOffset": 1125,
                  "charLength": 226,
                  "snippet": {
                    "text": "class TimeoutDurationParser {\n\n\tprivate static final Pattern PATTERN = Pattern.compile(\"([1-9]\\\\d*) ?((?:[nμm]?s)|m|h|d)?\",\n\t\tCASE_INSENSITIVE | UNICODE_CASE);\n\tprivate static final Map<String, TimeUnit> UNITS_BY_ABBREVIATION;"
                  }
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "junit5.junit-jupiter-engine.main",
                  "kind": "module"
                }
              ]
            }
          ],
          "partialFingerprints": {
            "equalIndicator/v1": "590351ae6b1a5dc0b05548cfbbd352c3779da93e51df1e4a9897b4163131c92b"
          },
          "baselineState": "unchanged",
          "properties": {
            "ideaSeverity": "WARNING",
            "tags": [
              "ideaSeverity"
            ]
          }
        },
        {
          "ruleId": "RegExpUnnecessaryNonCapturingGroup",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Unnecessary non-capturing group '(?:(?:any|none)\\\\(\\\\))'",
            "markdown": "Unnecessary non-capturing group `(?:(?:any|none)\\\\(\\\\))`"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "junit-platform-launcher/src/main/java/org/junit/platform/launcher/tagexpression/Tokenizer.java",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 26,
                  "startColumn": 65,
                  "charOffset": 692,
                  "charLength": 3,
                  "snippet": {
                    "text": "(?:"
                  },
                  "sourceLanguage": "RegExp"
                },
                "contextRegion": {
                  "startLine": 24,
                  "startColumn": 1,
                  "charOffset": 609,
                  "charLength": 155,
                  "snippet": {
                    "text": "class Tokenizer {\n\n\tprivate static final Pattern PATTERN = Pattern.compile(\"\\\\s*(?:(?:(?:any|none)\\\\(\\\\))|[()!|&]|(?:[^\\\\s()!|&]+))\",\n\t\tCASE_INSENSITIVE);\n"
                  }
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "junit5.junit-platform-launcher.main",
                  "kind": "module"
                }
              ]
            }
          ],
          "partialFingerprints": {
            "equalIndicator/v1": "05ed20c3aab27a6306716d5debf7fbd358cd0731dd40b259d5557ac4320f4ac5"
          },
          "baselineState": "unchanged",
          "properties": {
            "ideaSeverity": "WARNING",
            "tags": [
              "ideaSeverity"
            ]
          }
        },
        {
          "ruleId": "RegExpUnnecessaryNonCapturingGroup",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Unnecessary non-capturing group '(?:[^\\\\s()!|&]+)'",
            "markdown": "Unnecessary non-capturing group `(?:[^\\\\s()!|&]+)`"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "junit-platform-launcher/src/main/java/org/junit/platform/launcher/tagexpression/Tokenizer.java",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 26,
                  "startColumn": 96,
                  "charOffset": 723,
                  "charLength": 3,
                  "snippet": {
                    "text": "(?:"
                  },
                  "sourceLanguage": "RegExp"
                },
                "contextRegion": {
                  "startLine": 24,
                  "startColumn": 1,
                  "charOffset": 609,
                  "charLength": 155,
                  "snippet": {
                    "text": "class Tokenizer {\n\n\tprivate static final Pattern PATTERN = Pattern.compile(\"\\\\s*(?:(?:(?:any|none)\\\\(\\\\))|[()!|&]|(?:[^\\\\s()!|&]+))\",\n\t\tCASE_INSENSITIVE);\n"
                  }
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "junit5.junit-platform-launcher.main",
                  "kind": "module"
                }
              ]
            }
          ],
          "partialFingerprints": {
            "equalIndicator/v1": "8bd0e5c26fdc5199ee3d0bd3820b5bb2438a1183bdcb04d19e6e68e344083bba"
          },
          "baselineState": "unchanged",
          "properties": {
            "ideaSeverity": "WARNING",
            "tags": [
              "ideaSeverity"
            ]
          }
        },
        {
          "ruleId": "ManualMinMaxCalculation",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Can be replaced with 'Math.min()' call",
            "markdown": "Can be replaced with 'Math.min()' call"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "junit-platform-launcher/src/main/java/org/junit/platform/launcher/listeners/MutableTestExecutionSummary.java",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 253,
                  "startColumn": 25,
                  "charOffset": 7514,
                  "charLength": 51,
                  "snippet": {
                    "text": "(numDistinctFrames > max) ? max : numDistinctFrames"
                  },
                  "sourceLanguage": "JAVA"
                },
                "contextRegion": {
                  "startLine": 251,
                  "startColumn": 1,
                  "charOffset": 7376,
                  "charLength": 294,
                  "snippet": {
                    "text": "\t\tint duplicates = numberOfCommonFrames(trace, parentTrace);\n\t\tint numDistinctFrames = trace.length - duplicates;\n\t\tint numDisplayLines = (numDistinctFrames > max) ? max : numDistinctFrames;\n\t\tfor (int i = 0; i < numDisplayLines; i++) {\n\t\t\twriter.printf(\"%s%s%s%n\", indentation, TAB, trace[i]);"
                  }
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "junit5.junit-platform-launcher.main",
                  "kind": "module"
                }
              ]
            }
          ],
          "partialFingerprints": {
            "equalIndicator/v1": "5bbd9e92fe01baf2e826289da773ed3d1241047a68a5ad54f8f1c263c05123ee"
          },
          "baselineState": "unchanged",
          "properties": {
            "ideaSeverity": "WARNING",
            "tags": [
              "ideaSeverity"
            ]
          }
        },
        {
          "ruleId": "TrivialStringConcatenation",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Empty string used in concatenation",
            "markdown": "Empty string used in concatenation"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "junit-platform-launcher/src/main/java/org/junit/platform/launcher/tagexpression/TagExpressions.java",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 74,
                  "startColumn": 29,
                  "charOffset": 1540,
                  "charLength": 2,
                  "snippet": {
                    "text": "\"\""
                  },
                  "sourceLanguage": "JAVA"
                },
                "contextRegion": {
                  "startLine": 72,
                  "startColumn": 1,
                  "charOffset": 1469,
                  "charLength": 84,
                  "snippet": {
                    "text": "\t\t\t@Override\n\t\t\tpublic String toString() {\n\t\t\t\treturn \"!\" + toNegate + \"\";\n\t\t\t}\n\t\t};"
                  }
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "junit5.junit-platform-launcher.main",
                  "kind": "module"
                }
              ]
            }
          ],
          "partialFingerprints": {
            "equalIndicator/v1": "2bdf4ec651831f365d7a10e8c930ff0be3673eabc351914db1a9ce6a04cb6307"
          },
          "baselineState": "unchanged",
          "properties": {
            "ideaSeverity": "WARNING",
            "tags": [
              "ideaSeverity"
            ]
          }
        },
        {
          "ruleId": "ThrowableNotThrown",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Result of 'throwAsUncheckedException()' not thrown",
            "markdown": "Result of `throwAsUncheckedException()` not thrown"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "junit-jupiter-api/src/main/java/org/junit/jupiter/api/Assumptions.java",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 249,
                  "startColumn": 20,
                  "charOffset": 8781,
                  "charLength": 25,
                  "snippet": {
                    "text": "throwAsUncheckedException"
                  },
                  "sourceLanguage": "JAVA"
                },
                "contextRegion": {
                  "startLine": 247,
                  "startColumn": 1,
                  "charOffset": 8732,
                  "charLength": 87,
                  "snippet": {
                    "text": "\t\t\t}\n\t\t\tcatch (Throwable t) {\n\t\t\t\tExceptionUtils.throwAsUncheckedException(t);\n\t\t\t}\n\t\t}"
                  }
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "junit5.junit-jupiter-api.main",
                  "kind": "module"
                }
              ]
            }
          ],
          "partialFingerprints": {
            "equalIndicator/v1": "f7e21c76e76db6fbb8a4274db1ef3b716c72770a4a18d08d4f7fe07172a31ef8"
          },
          "baselineState": "unchanged",
          "properties": {
            "ideaSeverity": "WARNING",
            "tags": [
              "ideaSeverity"
            ]
          }
        },
        {
          "ruleId": "ThrowableNotThrown",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Result of 'throwAsUncheckedException()' not thrown",
            "markdown": "Result of `throwAsUncheckedException()` not thrown"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "junit-jupiter-api/src/main/java/org/junit/jupiter/api/AssertTimeout.java",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 81,
                  "startColumn": 19,
                  "charOffset": 2611,
                  "charLength": 25,
                  "snippet": {
                    "text": "throwAsUncheckedException"
                  },
                  "sourceLanguage": "JAVA"
                },
                "contextRegion": {
                  "startLine": 79,
                  "startColumn": 1,
                  "charOffset": 2564,
                  "charLength": 82,
                  "snippet": {
                    "text": "\t\t}\n\t\tcatch (Throwable ex) {\n\t\t\tExceptionUtils.throwAsUncheckedException(ex);\n\t\t}\n"
                  }
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "junit5.junit-jupiter-api.main",
                  "kind": "module"
                }
              ]
            }
          ],
          "partialFingerprints": {
            "equalIndicator/v1": "713cedf8b4501a57b0e2c3148bb7f6391539b7c4f594deb8adeb55609e347495"
          },
          "baselineState": "unchanged",
          "properties": {
            "ideaSeverity": "WARNING",
            "tags": [
              "ideaSeverity"
            ]
          }
        },
        {
          "ruleId": "ThrowableNotThrown",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Result of 'throwAsUncheckedException()' not thrown",
            "markdown": "Result of `throwAsUncheckedException()` not thrown"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "junit-jupiter-engine/src/main/java/org/junit/jupiter/engine/extension/TempDirectory.java",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 105,
                  "startColumn": 20,
                  "charOffset": 4104,
                  "charLength": 25,
                  "snippet": {
                    "text": "throwAsUncheckedException"
                  },
                  "sourceLanguage": "JAVA"
                },
                "contextRegion": {
                  "startLine": 103,
                  "startColumn": 1,
                  "charOffset": 4055,
                  "charLength": 89,
                  "snippet": {
                    "text": "\t\t\t}\n\t\t\tcatch (Throwable t) {\n\t\t\t\tExceptionUtils.throwAsUncheckedException(t);\n\t\t\t}\n\t\t});"
                  }
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "junit5.junit-jupiter-engine.main",
                  "kind": "module"
                }
              ]
            }
          ],
          "partialFingerprints": {
            "equalIndicator/v1": "d0a51234792a238deae8171827eec6605000936ad87ceefe184bae48d342ec51"
          },
          "baselineState": "unchanged",
          "properties": {
            "ideaSeverity": "WARNING",
            "tags": [
              "ideaSeverity"
            ]
          }
        },
        {
          "ruleId": "ThrowableNotThrown",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Result of 'throwAsUncheckedException()' not thrown",
            "markdown": "Result of `throwAsUncheckedException()` not thrown"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "junit-jupiter-engine/src/main/java/org/junit/jupiter/engine/descriptor/ClassBasedTestDescriptor.java",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 349,
                  "startColumn": 19,
                  "charOffset": 14648,
                  "charLength": 25,
                  "snippet": {
                    "text": "throwAsUncheckedException"
                  },
                  "sourceLanguage": "JAVA"
                },
                "contextRegion": {
                  "startLine": 347,
                  "startColumn": 1,
                  "charOffset": 14594,
                  "charLength": 98,
                  "snippet": {
                    "text": "\t\t}\n\t\tcatch (Throwable throwable) {\n\t\t\tExceptionUtils.throwAsUncheckedException(throwable);\n\t\t}\n\t}"
                  }
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "junit5.junit-jupiter-engine.main",
                  "kind": "module"
                }
              ]
            }
          ],
          "partialFingerprints": {
            "equalIndicator/v1": "97fd7e012894b247c19c390b46c0e901a42e25181516aaacb0a9966c0fddaa8e"
          },
          "baselineState": "unchanged",
          "properties": {
            "ideaSeverity": "WARNING",
            "tags": [
              "ideaSeverity"
            ]
          }
        },
        {
          "ruleId": "ThrowableNotThrown",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Result of 'throwAsUncheckedException()' not thrown",
            "markdown": "Result of `throwAsUncheckedException()` not thrown"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "junit-jupiter-engine/src/main/java/org/junit/jupiter/engine/descriptor/JupiterTestDescriptor.java",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 118,
                  "startColumn": 19,
                  "charOffset": 4978,
                  "charLength": 25,
                  "snippet": {
                    "text": "throwAsUncheckedException"
                  },
                  "sourceLanguage": "JAVA"
                },
                "contextRegion": {
                  "startLine": 116,
                  "startColumn": 1,
                  "charOffset": 4900,
                  "charLength": 120,
                  "snippet": {
                    "text": "\t\t// No handlers left?\n\t\tif (exceptionHandlers.isEmpty()) {\n\t\t\tExceptionUtils.throwAsUncheckedException(throwable);\n\t\t}\n"
                  }
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "junit5.junit-jupiter-engine.main",
                  "kind": "module"
                }
              ]
            }
          ],
          "partialFingerprints": {
            "equalIndicator/v1": "408ad810109834c6fcf1c5c315ff87a52894c9f56ba8ae13bd7c04fd24630681"
          },
          "baselineState": "unchanged",
          "properties": {
            "ideaSeverity": "WARNING",
            "tags": [
              "ideaSeverity"
            ]
          }
        },
        {
          "ruleId": "ThrowableNotThrown",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Result of 'throwAsUncheckedException()' not thrown",
            "markdown": "Result of `throwAsUncheckedException()` not thrown"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "junit-platform-engine/src/main/java/org/junit/platform/engine/support/hierarchical/ForkJoinPoolHierarchicalTestExecutorService.java",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 174,
                  "startColumn": 20,
                  "charOffset": 6973,
                  "charLength": 25,
                  "snippet": {
                    "text": "throwAsUncheckedException"
                  },
                  "sourceLanguage": "JAVA"
                },
                "contextRegion": {
                  "startLine": 172,
                  "startColumn": 1,
                  "charOffset": 6913,
                  "charLength": 98,
                  "snippet": {
                    "text": "\t\t\t}\n\t\t\tcatch (InterruptedException e) {\n\t\t\t\tExceptionUtils.throwAsUncheckedException(e);\n\t\t\t}\n\t\t}"
                  }
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "junit5.junit-platform-engine.main",
                  "kind": "module"
                }
              ]
            }
          ],
          "partialFingerprints": {
            "equalIndicator/v1": "72271b4a1a524100f5b99f21d88743f051c03919fc7e0e8b0525a21e6b3e5b68"
          },
          "baselineState": "unchanged",
          "properties": {
            "ideaSeverity": "WARNING",
            "tags": [
              "ideaSeverity"
            ]
          }
        },
        {
          "ruleId": "ThrowableNotThrown",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Result of 'throwAsUncheckedException()' not thrown",
            "markdown": "Result of `throwAsUncheckedException()` not thrown"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "junit-platform-engine/src/main/java/org/junit/platform/engine/support/hierarchical/ThrowableCollector.java",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 161,
                  "startColumn": 19,
                  "charOffset": 5508,
                  "charLength": 25,
                  "snippet": {
                    "text": "throwAsUncheckedException"
                  },
                  "sourceLanguage": "JAVA"
                },
                "contextRegion": {
                  "startLine": 159,
                  "startColumn": 1,
                  "charOffset": 5441,
                  "charLength": 116,
                  "snippet": {
                    "text": "\tpublic void assertEmpty() {\n\t\tif (!isEmpty()) {\n\t\t\tExceptionUtils.throwAsUncheckedException(this.throwable);\n\t\t}\n\t}"
                  }
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "junit5.junit-platform-engine.main",
                  "kind": "module"
                }
              ]
            }
          ],
          "partialFingerprints": {
            "equalIndicator/v1": "5293807c438903f45bd2a9b0fb5fee1e401a8bb87669e78cdf0a3e804f1651cf"
          },
          "baselineState": "unchanged",
          "properties": {
            "ideaSeverity": "WARNING",
            "tags": [
              "ideaSeverity"
            ]
          }
        },
        {
          "ruleId": "ThrowableNotThrown",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Result of 'throwAsUncheckedException()' not thrown",
            "markdown": "Result of `throwAsUncheckedException()` not thrown"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "junit-platform-engine/src/main/java/org/junit/platform/engine/support/hierarchical/NodeTestTask.java",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 228,
                  "startColumn": 21,
                  "charOffset": 8063,
                  "charLength": 25,
                  "snippet": {
                    "text": "throwAsUncheckedException"
                  },
                  "sourceLanguage": "JAVA"
                },
                "contextRegion": {
                  "startLine": 226,
                  "startColumn": 1,
                  "charOffset": 8002,
                  "charLength": 112,
                  "snippet": {
                    "text": "\t\t\t\t}\n\t\t\t\tcatch (ExecutionException e) {\n\t\t\t\t\tExceptionUtils.throwAsUncheckedException(e.getCause());\n\t\t\t\t}\n\t\t\t}"
                  }
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "junit5.junit-platform-engine.main",
                  "kind": "module"
                }
              ]
            }
          ],
          "partialFingerprints": {
            "equalIndicator/v1": "2a142d1e2b064389b6f6c8c819def6db3e080f88c93eaf7e15329335cd5cb352"
          },
          "baselineState": "unchanged",
          "properties": {
            "ideaSeverity": "WARNING",
            "tags": [
              "ideaSeverity"
            ]
          }
        },
        {
          "ruleId": "ThrowableNotThrown",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Result of 'throwAsUncheckedException()' not thrown",
            "markdown": "Result of `throwAsUncheckedException()` not thrown"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "junit-platform-commons/src/main/java/org/junit/platform/commons/util/BlacklistedExceptions.java",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 57,
                  "startColumn": 19,
                  "charOffset": 1654,
                  "charLength": 25,
                  "snippet": {
                    "text": "throwAsUncheckedException"
                  },
                  "sourceLanguage": "JAVA"
                },
                "contextRegion": {
                  "startLine": 55,
                  "startColumn": 1,
                  "charOffset": 1481,
                  "charLength": 217,
                  "snippet": {
                    "text": "\tpublic static void rethrowIfBlacklisted(Throwable exception) {\n\t\tif (blacklist.stream().anyMatch(exceptionType -> exceptionType.isInstance(exception))) {\n\t\t\tExceptionUtils.throwAsUncheckedException(exception);\n\t\t}\n\t}"
                  }
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "junit5.junit-platform-commons.main",
                  "kind": "module"
                }
              ]
            }
          ],
          "partialFingerprints": {
            "equalIndicator/v1": "2b3803d5eaa19d512676e8691afa218ee1020ae679e3785c0d62afc5ac8d9b44"
          },
          "baselineState": "unchanged",
          "properties": {
            "ideaSeverity": "WARNING",
            "tags": [
              "ideaSeverity"
            ]
          }
        },
        {
          "ruleId": "RedundantUnmodifiable",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Redundant usage of the 'unmodifiableList' wrapper",
            "markdown": "Redundant usage of the 'unmodifiableList' wrapper"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "junit-platform-commons/src/main/java/org/junit/platform/commons/util/ReflectionUtils.java",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 998,
                  "startColumn": 10,
                  "charOffset": 34898,
                  "charLength": 28,
                  "snippet": {
                    "text": "Collections.unmodifiableList"
                  },
                  "sourceLanguage": "JAVA"
                },
                "contextRegion": {
                  "startLine": 996,
                  "startColumn": 1,
                  "charOffset": 34785,
                  "charLength": 207,
                  "snippet": {
                    "text": "\t */\n\tpublic static List<Class<?>> findAllClassesInModule(String moduleName, ClassFilter classFilter) {\n\t\treturn Collections.unmodifiableList(ModuleUtils.findAllClassesInModule(moduleName, classFilter));\n\t}\n"
                  }
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "junit5.junit-platform-commons.main",
                  "kind": "module"
                }
              ]
            }
          ],
          "partialFingerprints": {
            "equalIndicator/v1": "0a1920c9a659d41a4c75c37207b9c5b21b75e88c6070567d851ab544e7b458df"
          },
          "baselineState": "unchanged",
          "properties": {
            "ideaSeverity": "WARNING",
            "tags": [
              "ideaSeverity"
            ]
          }
        },
        {
          "ruleId": "ArraysAsListWithZeroOrOneArgument",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Call to 'asList()' with only one argument",
            "markdown": "Call to `asList()` with only one argument"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "junit-platform-console/src/main/java/org/junit/platform/console/options/AvailableOptions.java",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 179,
                  "startColumn": 10,
                  "charOffset": 8463,
                  "charLength": 6,
                  "snippet": {
                    "text": "asList"
                  },
                  "sourceLanguage": "JAVA"
                },
                "contextRegion": {
                  "startLine": 177,
                  "startColumn": 1,
                  "charOffset": 8352,
                  "charLength": 240,
                  "snippet": {
                    "text": "\t\t\t\t\t+ \"Default: ${DEFAULT-VALUE}\")\n\tprivate List<String> includeClassNamePatterns = new ArrayList<>(\n\t\tArrays.asList(ClassNameFilter.STANDARD_INCLUDE_PATTERN));\n\n\t@Option(names = { \"--n\", \"-include-classname\" }, arity = \"1\", hidden = true)"
                  }
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "junit5.junit-platform-console.main",
                  "kind": "module"
                }
              ]
            }
          ],
          "partialFingerprints": {
            "equalIndicator/v1": "bef3270d462ba67591e008380f236832b768e4954b1bbab921a9f79e371f0c04"
          },
          "baselineState": "unchanged",
          "properties": {
            "ideaSeverity": "WARNING",
            "tags": [
              "ideaSeverity"
            ]
          }
        },
        {
          "ruleId": "InnerClassMayBeStatic",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Inner class 'RewindableByteArrayOutputStream' may be 'static'",
            "markdown": "Inner class `RewindableByteArrayOutputStream` may be 'static'"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "junit-platform-launcher/src/main/java/org/junit/platform/launcher/core/StreamInterceptor.java",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 96,
                  "startColumn": 8,
                  "charOffset": 2728,
                  "charLength": 31,
                  "snippet": {
                    "text": "RewindableByteArrayOutputStream"
                  },
                  "sourceLanguage": "JAVA"
                },
                "contextRegion": {
                  "startLine": 94,
                  "startColumn": 1,
                  "charOffset": 2717,
                  "charLength": 144,
                  "snippet": {
                    "text": "\t}\n\n\tclass RewindableByteArrayOutputStream extends ByteArrayOutputStream {\n\n\t\tprivate final Deque<Integer> markedPositions = new ArrayDeque<>();"
                  }
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "junit5.junit-platform-launcher.main",
                  "kind": "module"
                }
              ]
            }
          ],
          "partialFingerprints": {
            "equalIndicator/v1": "968202878a6ff6e31c90357fa2402cd662520ce8a5ed61322a389d00a6d2cade"
          },
          "baselineState": "unchanged",
          "properties": {
            "ideaSeverity": "WARNING",
            "tags": [
              "ideaSeverity"
            ]
          }
        },
        {
          "ruleId": "AbstractClassNeverImplemented",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Abstract class 'AbstractJUnit3TestCase' has no concrete subclass",
            "markdown": "Abstract class `AbstractJUnit3TestCase` has no concrete subclass"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "junit-vintage-engine/src/testFixtures/java/org/junit/vintage/engine/samples/junit3/AbstractJUnit3TestCase.java",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 20,
                  "startColumn": 23,
                  "charOffset": 470,
                  "charLength": 22,
                  "snippet": {
                    "text": "AbstractJUnit3TestCase"
                  },
                  "sourceLanguage": "JAVA"
                },
                "contextRegion": {
                  "startLine": 18,
                  "startColumn": 1,
                  "charOffset": 429,
                  "charLength": 105,
                  "snippet": {
                    "text": " * @since 4.12\n */\npublic abstract class AbstractJUnit3TestCase extends TestCase {\n\n\tpublic void test() {"
                  }
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "junit5.junit-vintage-engine.testFixtures",
                  "kind": "module"
                }
              ]
            }
          ],
          "partialFingerprints": {
            "equalIndicator/v1": "edf73c77a9cd81c62f2c654e1aff3ef32181c82f44e1848e85d0fd96125699ed"
          },
          "baselineState": "unchanged",
          "properties": {
            "ideaSeverity": "WARNING",
            "tags": [
              "ideaSeverity"
            ]
          }
        },
        {
          "ruleId": "AbstractClassNeverImplemented",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Abstract class 'AbstractJunit4TestCaseWithConstructorParameter' has no concrete subclass",
            "markdown": "Abstract class `AbstractJunit4TestCaseWithConstructorParameter` has no concrete subclass"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "junit-vintage-engine/src/testFixtures/java/org/junit/vintage/engine/samples/junit4/AbstractJunit4TestCaseWithConstructorParameter.java",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 15,
                  "startColumn": 23,
                  "charOffset": 411,
                  "charLength": 46,
                  "snippet": {
                    "text": "AbstractJunit4TestCaseWithConstructorParameter"
                  },
                  "sourceLanguage": "JAVA"
                },
                "contextRegion": {
                  "startLine": 13,
                  "startColumn": 1,
                  "charOffset": 365,
                  "charLength": 167,
                  "snippet": {
                    "text": "import org.junit.Test;\n\npublic abstract class AbstractJunit4TestCaseWithConstructorParameter {\n\n\tpublic AbstractJunit4TestCaseWithConstructorParameter(int parameter) {"
                  }
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "junit5.junit-vintage-engine.testFixtures",
                  "kind": "module"
                }
              ]
            }
          ],
          "partialFingerprints": {
            "equalIndicator/v1": "e34c73c75c4141b2302269b45441f1841dbd0d8d121c903ad9ed6e27a5cb5129"
          },
          "baselineState": "unchanged",
          "properties": {
            "ideaSeverity": "WARNING",
            "tags": [
              "ideaSeverity"
            ]
          }
        },
        {
          "ruleId": "OptionalGetWithoutIsPresent",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "'Optional.get()' without 'isPresent()' check",
            "markdown": "`Optional.get()` without 'isPresent()' check"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "junit-jupiter-engine/src/main/java/org/junit/jupiter/engine/execution/ConditionEvaluator.java",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 75,
                  "startColumn": 25,
                  "charOffset": 2807,
                  "charLength": 3,
                  "snippet": {
                    "text": "get"
                  },
                  "sourceLanguage": "JAVA"
                },
                "contextRegion": {
                  "startLine": 73,
                  "startColumn": 1,
                  "charOffset": 2564,
                  "charLength": 263,
                  "snippet": {
                    "text": "\tprivate void logResult(Class<?> conditionType, ConditionEvaluationResult result, ExtensionContext context) {\n\t\tlogger.trace(() -> format(\"Evaluation of condition [%s] on [%s] resulted in: %s\", conditionType.getName(),\n\t\t\tcontext.getElement().get(), result));\n\t}\n"
                  }
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "junit5.junit-jupiter-engine.main",
                  "kind": "module"
                }
              ]
            }
          ],
          "partialFingerprints": {
            "equalIndicator/v1": "eb6f59326b4f268cb55dbaea8059e908b47d8220b11cc96f65d73242f0b67209"
          },
          "baselineState": "unchanged",
          "properties": {
            "ideaSeverity": "WARNING",
            "tags": [
              "ideaSeverity"
            ]
          }
        },
        {
          "ruleId": "OptionalGetWithoutIsPresent",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "'Optional.get()' without 'isPresent()' check",
            "markdown": "`Optional.get()` without 'isPresent()' check"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "junit-jupiter-engine/src/main/java/org/junit/jupiter/engine/extension/RepeatedTestExtension.java",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 43,
                  "startColumn": 94,
                  "charOffset": 1585,
                  "charLength": 3,
                  "snippet": {
                    "text": "get"
                  },
                  "sourceLanguage": "JAVA"
                },
                "contextRegion": {
                  "startLine": 41,
                  "startColumn": 1,
                  "charOffset": 1388,
                  "charLength": 380,
                  "snippet": {
                    "text": "\t\tMethod testMethod = context.getRequiredTestMethod();\n\t\tString displayName = context.getDisplayName();\n\t\tRepeatedTest repeatedTest = AnnotationUtils.findAnnotation(testMethod, RepeatedTest.class).get();\n\t\tint totalRepetitions = totalRepetitions(repeatedTest, testMethod);\n\t\tRepeatedTestDisplayNameFormatter formatter = displayNameFormatter(repeatedTest, testMethod, displayName);"
                  }
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "junit5.junit-jupiter-engine.main",
                  "kind": "module"
                }
              ]
            }
          ],
          "partialFingerprints": {
            "equalIndicator/v1": "f8b0a815e3c5992818399ae7fd669871cce6234069acab9df0a40c314a7de947"
          },
          "baselineState": "unchanged",
          "properties": {
            "ideaSeverity": "WARNING",
            "tags": [
              "ideaSeverity"
            ]
          }
        },
        {
          "ruleId": "OptionalGetWithoutIsPresent",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "'Optional.get()' without 'isPresent()' check",
            "markdown": "`Optional.get()` without 'isPresent()' check"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "junit-jupiter-engine/src/main/java/org/junit/jupiter/engine/extension/DisabledCondition.java",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 46,
                  "startColumn": 19,
                  "charOffset": 1623,
                  "charLength": 3,
                  "snippet": {
                    "text": "get"
                  },
                  "sourceLanguage": "JAVA"
                },
                "contextRegion": {
                  "startLine": 44,
                  "startColumn": 1,
                  "charOffset": 1483,
                  "charLength": 223,
                  "snippet": {
                    "text": "\t\tif (disabled.isPresent()) {\n\t\t\tString reason = disabled.map(Disabled::value).filter(StringUtils::isNotBlank).orElseGet(\n\t\t\t\t() -> element.get() + \" is @Disabled\");\n\t\t\treturn ConditionEvaluationResult.disabled(reason);\n\t\t}"
                  }
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "junit5.junit-jupiter-engine.main",
                  "kind": "module"
                }
              ]
            }
          ],
          "partialFingerprints": {
            "equalIndicator/v1": "7a23b9a7c355fb2e243f51204f1601ffde3345f1b3d9c51cfa392eda8285227e"
          },
          "baselineState": "unchanged",
          "properties": {
            "ideaSeverity": "WARNING",
            "tags": [
              "ideaSeverity"
            ]
          }
        },
        {
          "ruleId": "OptionalGetWithoutIsPresent",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "'Optional.get()' without 'isPresent()' check",
            "markdown": "`Optional.get()` without 'isPresent()' check"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "junit-jupiter-params/src/main/java/org/junit/jupiter/params/ParameterizedTestExtension.java",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 123,
                  "startColumn": 97,
                  "charOffset": 5133,
                  "charLength": 3,
                  "snippet": {
                    "text": "get"
                  },
                  "sourceLanguage": "JAVA"
                },
                "contextRegion": {
                  "startLine": 121,
                  "startColumn": 1,
                  "charOffset": 4883,
                  "charLength": 355,
                  "snippet": {
                    "text": "\tprivate ParameterizedTestNameFormatter createNameFormatter(Method templateMethod,\n\t\t\tParameterizedTestMethodContext methodContext, String displayName) {\n\t\tParameterizedTest parameterizedTest = findAnnotation(templateMethod, ParameterizedTest.class).get();\n\t\tString pattern = Preconditions.notBlank(parameterizedTest.name().trim(),\n\t\t\t() -> String.format("
                  }
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "junit5.junit-jupiter-params.main",
                  "kind": "module"
                }
              ]
            }
          ],
          "partialFingerprints": {
            "equalIndicator/v1": "b964ccda7be036d9312d1bfb4797a6011941a65fea5e97ce0df18d77c93dbae9"
          },
          "baselineState": "unchanged",
          "properties": {
            "ideaSeverity": "WARNING",
            "tags": [
              "ideaSeverity"
            ]
          }
        },
        {
          "ruleId": "OptionalGetWithoutIsPresent",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "'Optional::get' without 'isPresent()' check",
            "markdown": "`Optional::get` without 'isPresent()' check"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "junit-vintage-engine/src/main/java/org/junit/vintage/engine/execution/TestRun.java",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 193,
                  "startColumn": 10,
                  "charOffset": 7448,
                  "charLength": 13,
                  "snippet": {
                    "text": "Optional::get"
                  },
                  "sourceLanguage": "JAVA"
                },
                "contextRegion": {
                  "startLine": 191,
                  "startColumn": 1,
                  "charOffset": 7381,
                  "charLength": 124,
                  "snippet": {
                    "text": "\t\t\t\t.stream()\n\t\t\t\t.map(TestExecutionResult::getThrowable)\n\t\t\t\t.map(Optional::get)\n\t\t\t\t.collect(toList());\n\t\t// @formatter:on"
                  }
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "junit5.junit-vintage-engine.main",
                  "kind": "module"
                }
              ]
            }
          ],
          "partialFingerprints": {
            "equalIndicator/v1": "1b693328505ff8cb53f8a965833516e1d9a9357711c4eb4767c09115c9c46733"
          },
          "baselineState": "unchanged",
          "properties": {
            "ideaSeverity": "WARNING",
            "tags": [
              "ideaSeverity"
            ]
          }
        },
        {
          "ruleId": "OptionalGetWithoutIsPresent",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "'Optional.get()' without 'isPresent()' check",
            "markdown": "`Optional.get()` without 'isPresent()' check"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "junit-platform-engine/src/main/java/org/junit/platform/engine/CompositeFilter.java",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 76,
                  "startColumn": 6,
                  "charOffset": 2106,
                  "charLength": 3,
                  "snippet": {
                    "text": "get"
                  },
                  "sourceLanguage": "JAVA"
                },
                "contextRegion": {
                  "startLine": 74,
                  "startColumn": 1,
                  "charOffset": 2043,
                  "charLength": 176,
                  "snippet": {
                    "text": "\t\t\t\t.map(Filter::toPredicate)\n\t\t\t\t.reduce(Predicate::and)\n\t\t\t\t.get(); // it's safe to call get() here because the constructor ensures filters is not empty\n\t\t// @formatter:on\n\t}"
                  }
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "junit5.junit-platform-engine.main",
                  "kind": "module"
                }
              ]
            }
          ],
          "partialFingerprints": {
            "equalIndicator/v1": "4cbc30d509887bc4b7af04cf0834963225db0b7f503a47f12d16707921f541cc"
          },
          "baselineState": "unchanged",
          "properties": {
            "ideaSeverity": "WARNING",
            "tags": [
              "ideaSeverity"
            ]
          }
        },
        {
          "ruleId": "OptionalGetWithoutIsPresent",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "'Optional.get()' without 'isPresent()' check",
            "markdown": "`Optional.get()` without 'isPresent()' check"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "junit-platform-engine/src/testFixtures/java/org/junit/platform/engine/support/hierarchical/DemoHierarchicalEngineDescriptor.java",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 30,
                  "startColumn": 42,
                  "charOffset": 1009,
                  "charLength": 3,
                  "snippet": {
                    "text": "get"
                  },
                  "sourceLanguage": "JAVA"
                },
                "contextRegion": {
                  "startLine": 28,
                  "startColumn": 1,
                  "charOffset": 905,
                  "charLength": 115,
                  "snippet": {
                    "text": "\n\tpublic DemoHierarchicalEngineDescriptor(UniqueId uniqueId) {\n\t\tsuper(uniqueId, uniqueId.getEngineId().get());\n\t}\n"
                  }
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "junit5.junit-platform-engine.testFixtures",
                  "kind": "module"
                }
              ]
            }
          ],
          "partialFingerprints": {
            "equalIndicator/v1": "10a421585f33de69eeb61333a57320359326b11001dd7a0c8a6e9babbc6bbe5b"
          },
          "baselineState": "unchanged",
          "properties": {
            "ideaSeverity": "WARNING",
            "tags": [
              "ideaSeverity"
            ]
          }
        },
        {
          "ruleId": "OptionalGetWithoutIsPresent",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "'Optional.get()' without 'isPresent()' check",
            "markdown": "`Optional.get()` without 'isPresent()' check"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "junit-platform-runner/src/main/java/org/junit/platform/runner/JUnitPlatformRunnerListener.java",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 40,
                  "startColumn": 50,
                  "charOffset": 1367,
                  "charLength": 3,
                  "snippet": {
                    "text": "get"
                  },
                  "sourceLanguage": "JAVA"
                },
                "contextRegion": {
                  "startLine": 38,
                  "startColumn": 1,
                  "charOffset": 1239,
                  "charLength": 197,
                  "snippet": {
                    "text": "\t@Override\n\tpublic void dynamicTestRegistered(TestIdentifier testIdentifier) {\n\t\tString parentId = testIdentifier.getParentId().get();\n\t\ttestTree.addDynamicDescription(testIdentifier, parentId);\n\t}"
                  }
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "junit5.junit-platform-runner.main",
                  "kind": "module"
                }
              ]
            }
          ],
          "partialFingerprints": {
            "equalIndicator/v1": "dd9822e7062108ea973cc8de6ebb0a49939c422ec76a21c256280561986ccc5c"
          },
          "baselineState": "unchanged",
          "properties": {
            "ideaSeverity": "WARNING",
            "tags": [
              "ideaSeverity"
            ]
          }
        },
        {
          "ruleId": "OptionalGetWithoutIsPresent",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "'Optional.get()' without 'isPresent()' check",
            "markdown": "`Optional.get()` without 'isPresent()' check"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "junit-platform-commons/src/main/java/org/junit/platform/commons/util/AnnotationUtils.java",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 283,
                  "startColumn": 100,
                  "charOffset": 10938,
                  "charLength": 3,
                  "snippet": {
                    "text": "get"
                  },
                  "sourceLanguage": "JAVA"
                },
                "contextRegion": {
                  "startLine": 281,
                  "startColumn": 1,
                  "charOffset": 10730,
                  "charLength": 320,
                  "snippet": {
                    "text": "\t\t\t\t// Nested container annotation?\n\t\t\t\telse if (isRepeatableAnnotationContainer(candidateAnnotationType)) {\n\t\t\t\t\tMethod method = ReflectionUtils.tryToGetMethod(candidateAnnotationType, \"value\").toOptional().get();\n\t\t\t\t\tAnnotation[] containedAnnotations = (Annotation[]) ReflectionUtils.invokeMethod(method, candidate);\n"
                  }
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "junit5.junit-platform-commons.main",
                  "kind": "module"
                }
              ]
            }
          ],
          "partialFingerprints": {
            "equalIndicator/v1": "a014ad47853784c99cdbc5e7ff77c18ce777bbaf79349a381ce2c2bcaceacbfa"
          },
          "baselineState": "unchanged",
          "properties": {
            "ideaSeverity": "WARNING",
            "tags": [
              "ideaSeverity"
            ]
          }
        },
        {
          "ruleId": "OptionalGetWithoutIsPresent",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "'Optional.get()' without 'isPresent()' check",
            "markdown": "`Optional.get()` without 'isPresent()' check"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "junit-platform-launcher/src/main/java/org/junit/platform/launcher/tagexpression/ParseResult.java",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 44,
                  "startColumn": 26,
                  "charOffset": 1350,
                  "charLength": 3,
                  "snippet": {
                    "text": "get"
                  },
                  "sourceLanguage": "JAVA"
                },
                "contextRegion": {
                  "startLine": 42,
                  "startColumn": 1,
                  "charOffset": 1266,
                  "charLength": 94,
                  "snippet": {
                    "text": "\t\t\tthrow exceptionCreator.apply(errorMessage().get());\n\t\t}\n\t\treturn tagExpression().get();\n\t}\n"
                  }
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "junit5.junit-platform-launcher.main",
                  "kind": "module"
                }
              ]
            }
          ],
          "partialFingerprints": {
            "equalIndicator/v1": "eec6969c5cec972e77e17d2516efe7f62bc06e1fa83f9156ad2d982cb6da45b6"
          },
          "baselineState": "unchanged",
          "properties": {
            "ideaSeverity": "WARNING",
            "tags": [
              "ideaSeverity"
            ]
          }
        },
        {
          "ruleId": "OptionalGetWithoutIsPresent",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "'Optional.get()' without 'isPresent()' check",
            "markdown": "`Optional.get()` without 'isPresent()' check"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "junit-jupiter-migrationsupport/src/main/java/org/junit/jupiter/migrationsupport/conditions/IgnoreCondition.java",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 53,
                  "startColumn": 31,
                  "charOffset": 1956,
                  "charLength": 3,
                  "snippet": {
                    "text": "get"
                  },
                  "sourceLanguage": "JAVA"
                },
                "contextRegion": {
                  "startLine": 51,
                  "startColumn": 1,
                  "charOffset": 1827,
                  "charLength": 233,
                  "snippet": {
                    "text": "\t\t\tString reason = ignoreAnnotation.map(Ignore::value) //\n\t\t\t\t\t.filter(StringUtils::isNotBlank) //\n\t\t\t\t\t.orElseGet(() -> element.get() + \" is disabled via @org.junit.Ignore\");\n\t\t\treturn ConditionEvaluationResult.disabled(reason);\n\t\t}"
                  }
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "junit5.junit-jupiter-migrationsupport.main",
                  "kind": "module"
                }
              ]
            }
          ],
          "partialFingerprints": {
            "equalIndicator/v1": "ba1b94b31e95055e1474066b7d6246cb566f8b34c6b872b08181ef333e39d3ca"
          },
          "baselineState": "unchanged",
          "properties": {
            "ideaSeverity": "WARNING",
            "tags": [
              "ideaSeverity"
            ]
          }
        },
        {
          "ruleId": "UnstableApiUsage",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "'constraints(kotlin.jvm.functions.Function1)' is marked unstable with @Incubating",
            "markdown": "'constraints(kotlin.jvm.functions.Function1)' is marked unstable with @Incubating"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "junit-bom/junit-bom.gradle.kts",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 10,
                  "startColumn": 2,
                  "charOffset": 156,
                  "charLength": 11,
                  "snippet": {
                    "text": "constraints"
                  },
                  "sourceLanguage": "kotlin"
                },
                "contextRegion": {
                  "startLine": 8,
                  "startColumn": 1,
                  "charOffset": 139,
                  "charLength": 119,
                  "snippet": {
                    "text": "\ndependencies {\n\tconstraints {\n\t\tval mavenizedProjects: List<Project> by rootProject.extra\n\t\tmavenizedProjects.sorted()"
                  }
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "junit5.junit-bom",
                  "kind": "module"
                }
              ]
            }
          ],
          "partialFingerprints": {
            "equalIndicator/v1": "815c0328b0f66c4127f8b1a93d182b0853966c22e102e2080b16dabf8ff14dff"
          },
          "baselineState": "unchanged",
          "properties": {
            "ideaSeverity": "WARNING",
            "tags": [
              "ideaSeverity"
            ]
          }
        },
        {
          "ruleId": "UnstableApiUsage",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "'plugins(org.gradle.api.Action)' is marked unstable with @Incubating",
            "markdown": "'plugins(org.gradle.api.Action)' is marked unstable with @Incubating"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "settings.gradle.kts",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 4,
                  "startColumn": 2,
                  "charOffset": 101,
                  "charLength": 7,
                  "snippet": {
                    "text": "plugins"
                  },
                  "sourceLanguage": "kotlin"
                },
                "contextRegion": {
                  "startLine": 2,
                  "startColumn": 1,
                  "charOffset": 80,
                  "charLength": 125,
                  "snippet": {
                    "text": "\npluginManagement {\n\tplugins {\n\t\tid(\"com.gradle.enterprise\") version \"3.3.1\"\n\t\tid(\"net.nemerosa.versioning\") version \"2.12.1\""
                  }
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "junit5",
                  "kind": "module"
                }
              ]
            }
          ],
          "partialFingerprints": {
            "equalIndicator/v1": "e3ce379a8f31455f2dd52a36abadcc2b8c7d19f2cd53224145c9da31d77570e4"
          },
          "baselineState": "unchanged",
          "properties": {
            "ideaSeverity": "WARNING",
            "tags": [
              "ideaSeverity"
            ]
          }
        },
        {
          "ruleId": "UnstableApiUsage",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "'constraints(kotlin.jvm.functions.Function1)' is marked unstable with @Incubating",
            "markdown": "'constraints(kotlin.jvm.functions.Function1)' is marked unstable with @Incubating"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "dependencies/dependencies.gradle.kts",
                  "uriBaseId": "SRCROOT"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 2,
                  "charOffset": 46,
                  "charLength": 11,
                  "snippet": {
                    "text": "constraints"
                  },
                  "sourceLanguage": "kotlin"
                },
                "contextRegion": {
                  "startLine": 4,
                  "startColumn": 1,
                  "charOffset": 29,
                  "charLength": 175,
                  "snippet": {
                    "text": "\ndependencies {\n\tconstraints {\n\t\t// api means \"the dependency is for both compilation and runtime\"\n\t\t// runtime means \"the dependency is only for runtime, not for compilation\""
                  }
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "junit5.dependencies",
                  "kind": "module"
                }
              ]
            }
          ],
          "partialFingerprints": {
            "equalIndicator/v1": "628403f6e6f4d8360d86fbc38b0f55dab4bafc12ea9345d793a4a93ccb49e092"
          },
          "baselineState": "unchanged",
          "properties": {
            "ideaSeverity": "WARNING",
            "tags": [
              "ideaSeverity"
            ]
          }
        }
      ],
      "automationDetails": {
        "id": "project/qodana/2022-05-12",
        "guid": "710a25cd-caff-4ccc-a397-41600350c3e5"
      },
      "newlineSequences": [
        "\r\n",
        "\n"
      ],
      "properties": {
        "qodana.sanity.results": [
          {
            "ruleId": "KotlinAnnotator",
            "kind": "fail",
            "level": "error",
            "message": {
              "text": "Val cannot be reassigned",
              "markdown": "Val cannot be reassigned"
            },
            "locations": [
              {
                "physicalLocation": {
                  "artifactLocation": {
                    "uri": "documentation/documentation.gradle.kts",
                    "uriBaseId": "SRCROOT"
                  },
                  "region": {
                    "startLine": 280,
                    "startColumn": 3,
                    "charOffset": 9287,
                    "charLength": 9,
                    "snippet": {
                      "text": "maxMemory"
                    },
                    "sourceLanguage": "kotlin"
                  },
                  "contextRegion": {
                    "startLine": 278,
                    "startColumn": 1,
                    "charOffset": 9197,
                    "charLength": 160,
                    "snippet": {
                      "text": "\t\tclasspath = files(modularProjects.map { it.sourceSets.main.get().compileClasspath })\n\n\t\tmaxMemory = \"1024m\"\n\t\tdestinationDir = file(\"$buildDir/docs/javadoc\")\n"
                    }
                  }
                },
                "logicalLocations": [
                  {
                    "fullyQualifiedName": "junit5.documentation",
                    "kind": "module"
                  }
                ]
              }
            ],
            "partialFingerprints": {
              "equalIndicator/v1": "eb734a4187bd4607163ccc85df936eb930da0815fd9a7a4ffdb6a4cbc8f04927"
            },
            "properties": {
              "ideaSeverity": "ERROR"
            }
          },
          {
            "ruleId": "KotlinAnnotator",
            "kind": "fail",
            "level": "error",
            "message": {
              "text": "Val cannot be reassigned",
              "markdown": "Val cannot be reassigned"
            },
            "locations": [
              {
                "physicalLocation": {
                  "artifactLocation": {
                    "uri": "documentation/documentation.gradle.kts",
                    "uriBaseId": "SRCROOT"
                  },
                  "region": {
                    "startLine": 281,
                    "startColumn": 3,
                    "charOffset": 9309,
                    "charLength": 14,
                    "snippet": {
                      "text": "destinationDir"
                    },
                    "sourceLanguage": "kotlin"
                  },
                  "contextRegion": {
                    "startLine": 279,
                    "startColumn": 1,
                    "charOffset": 9284,
                    "charLength": 85,
                    "snippet": {
                      "text": "\n\t\tmaxMemory = \"1024m\"\n\t\tdestinationDir = file(\"$buildDir/docs/javadoc\")\n\n\t\tdoFirst {"
                    }
                  }
                },
                "logicalLocations": [
                  {
                    "fullyQualifiedName": "junit5.documentation",
                    "kind": "module"
                  }
                ]
              }
            ],
            "partialFingerprints": {
              "equalIndicator/v1": "4d41418308f7fc001677afac6ffa45d6ddb201f4dd08bcfd6e3b94a114d01eda"
            },
            "properties": {
              "ideaSeverity": "ERROR"
            }
          }
        ],
        "qodana.promo.results": [
          {
            "ruleId": "SystemOutErr",
            "kind": "fail",
            "level": "warning",
            "message": {
              "text": "Uses of 'System.out' should probably be replaced with more robust logging",
              "markdown": "Uses of `System.out` should probably be replaced with more robust logging"
            },
            "locations": [
              {
                "physicalLocation": {
                  "artifactLocation": {
                    "uri": "junit-platform-console/src/main/java/org/junit/platform/console/ConsoleLauncher.java",
                    "uriBaseId": "SRCROOT"
                  },
                  "region": {
                    "startLine": 37,
                    "startColumn": 26,
                    "charOffset": 1218,
                    "charLength": 10,
                    "snippet": {
                      "text": "System.out"
                    },
                    "sourceLanguage": "JAVA"
                  },
                  "contextRegion": {
                    "startLine": 35,
                    "startColumn": 1,
                    "charOffset": 1149,
                    "charLength": 141,
                    "snippet": {
                      "text": "\n\tpublic static void main(String... args) {\n\t\tint exitCode = execute(System.out, System.err, args).getExitCode();\n\t\tSystem.exit(exitCode);\n\t}"
                    }
                  }
                },
                "logicalLocations": [
                  {
                    "fullyQualifiedName": "junit5.junit-platform-console.main",
                    "kind": "module"
                  }
                ]
              }
            ],
            "partialFingerprints": {
              "equalIndicator/v1": "57da3677376fa2be81466c3b36cd1349fe8316248f7675ca064475548ba80b77"
            },
            "properties": {
              "ideaSeverity": "WARNING"
            }
          },
          {
            "ruleId": "SystemOutErr",
            "kind": "fail",
            "level": "warning",
            "message": {
              "text": "Uses of 'System.err' should probably be replaced with more robust logging",
              "markdown": "Uses of `System.err` should probably be replaced with more robust logging"
            },
            "locations": [
              {
                "physicalLocation": {
                  "artifactLocation": {
                    "uri": "junit-platform-console/src/main/java/org/junit/platform/console/ConsoleLauncher.java",
                    "uriBaseId": "SRCROOT"
                  },
                  "region": {
                    "startLine": 37,
                    "startColumn": 38,
                    "charOffset": 1230,
                    "charLength": 10,
                    "snippet": {
                      "text": "System.err"
                    },
                    "sourceLanguage": "JAVA"
                  },
                  "contextRegion": {
                    "startLine": 35,
                    "startColumn": 1,
                    "charOffset": 1149,
                    "charLength": 141,
                    "snippet": {
                      "text": "\n\tpublic static void main(String... args) {\n\t\tint exitCode = execute(System.out, System.err, args).getExitCode();\n\t\tSystem.exit(exitCode);\n\t}"
                    }
                  }
                },
                "logicalLocations": [
                  {
                    "fullyQualifiedName": "junit5.junit-platform-console.main",
                    "kind": "module"
                  }
                ]
              }
            ],
            "partialFingerprints": {
              "equalIndicator/v1": "fb61c59a887113d79493a1d099ccba3415041a8712b3ac7f3c67d15b227f5013"
            },
            "properties": {
              "ideaSeverity": "WARNING"
            }
          },
          {
            "ruleId": "ClassNameSameAsAncestorName",
            "kind": "fail",
            "level": "warning",
            "message": {
              "text": "Class name 'Runner' is the same as one of its superclass' names",
              "markdown": "Class name `Runner` is the same as one of its superclass' names"
            },
            "locations": [
              {
                "physicalLocation": {
                  "artifactLocation": {
                    "uri": "junit-vintage-engine/src/testFixtures/java/org/junit/vintage/engine/samples/junit4/JUnit4TestCaseWithRunnerWithDuplicateChangingChildDescriptions.java",
                    "uriBaseId": "SRCROOT"
                  },
                  "region": {
                    "startLine": 19,
                    "startColumn": 22,
                    "charOffset": 671,
                    "charLength": 6,
                    "snippet": {
                      "text": "Runner"
                    },
                    "sourceLanguage": "JAVA"
                  },
                  "contextRegion": {
                    "startLine": 17,
                    "startColumn": 1,
                    "charOffset": 486,
                    "charLength": 256,
                    "snippet": {
                      "text": "@RunWith(JUnit4TestCaseWithRunnerWithDuplicateChangingChildDescriptions.Runner.class)\npublic class JUnit4TestCaseWithRunnerWithDuplicateChangingChildDescriptions {\n\tpublic static class Runner extends org.junit.runner.Runner {\n\n\t\tprivate Class<?> testClass;"
                    }
                  }
                },
                "logicalLocations": [
                  {
                    "fullyQualifiedName": "junit5.junit-vintage-engine.testFixtures",
                    "kind": "module"
                  }
                ]
              }
            ],
            "partialFingerprints": {
              "equalIndicator/v1": "957cfbcd8bdd1e159e31f4b5ed73a33495ef966020e9bc4724cf221ded01d308"
            },
            "properties": {
              "ideaSeverity": "WARNING"
            }
          },
          {
            "ruleId": "RedundantSemicolon",
            "kind": "fail",
            "level": "warning",
            "message": {
              "text": "Redundant semicolon",
              "markdown": "Redundant semicolon"
            },
            "locations": [
              {
                "physicalLocation": {
                  "artifactLocation": {
                    "uri": "junit-platform-runner/junit-platform-runner.gradle.kts",
                    "uriBaseId": "SRCROOT"
                  },
                  "region": {
                    "startLine": 1,
                    "startColumn": 45,
                    "charOffset": 44,
                    "charLength": 1,
                    "snippet": {
                      "text": ";"
                    },
                    "sourceLanguage": "kotlin"
                  },
                  "contextRegion": {
                    "startLine": 1,
                    "startColumn": 1,
                    "charOffset": 0,
                    "charLength": 56,
                    "snippet": {
                      "text": "import aQute.bnd.gradle.BundleTaskConvention;\n\nplugins {"
                    }
                  }
                },
                "logicalLocations": [
                  {
                    "fullyQualifiedName": "junit5.junit-platform-runner",
                    "kind": "module"
                  }
                ]
              }
            ],
            "partialFingerprints": {
              "equalIndicator/v1": "9748a39e6708977fd5caaafe6a4b5be46c7c59e704de7574ba28c9436f57b0c9"
            },
            "properties": {
              "ideaSeverity": "WARNING"
            }
          },
          {
            "ruleId": "RedundantSemicolon",
            "kind": "fail",
            "level": "warning",
            "message": {
              "text": "Redundant semicolon",
              "markdown": "Redundant semicolon"
            },
            "locations": [
              {
                "physicalLocation": {
                  "artifactLocation": {
                    "uri": "junit-jupiter-migrationsupport/junit-jupiter-migrationsupport.gradle.kts",
                    "uriBaseId": "SRCROOT"
                  },
                  "region": {
                    "startLine": 1,
                    "startColumn": 45,
                    "charOffset": 44,
                    "charLength": 1,
                    "snippet": {
                      "text": ";"
                    },
                    "sourceLanguage": "kotlin"
                  },
                  "contextRegion": {
                    "startLine": 1,
                    "startColumn": 1,
                    "charOffset": 0,
                    "charLength": 56,
                    "snippet": {
                      "text": "import aQute.bnd.gradle.BundleTaskConvention;\n\nplugins {"
                    }
                  }
                },
                "logicalLocations": [
                  {
                    "fullyQualifiedName": "junit5.junit-jupiter-migrationsupport",
                    "kind": "module"
                  }
                ]
              }
            ],
            "partialFingerprints": {
              "equalIndicator/v1": "0f72dc582103e0e949359175ad47009901e6b32f49331fbcdbf63d3b4a9f4f01"
            },
            "properties": {
              "ideaSeverity": "WARNING"
            }
          },
          {
            "ruleId": "TestCaseWithNoTestMethods",
            "kind": "fail",
            "level": "warning",
            "message": {
              "text": "Test class 'JUnit4TestCaseWithRunnerWithDuplicateChangingChildDescriptions' has no tests",
              "markdown": "Test class `JUnit4TestCaseWithRunnerWithDuplicateChangingChildDescriptions` has no tests"
            },
            "locations": [
              {
                "physicalLocation": {
                  "artifactLocation": {
                    "uri": "junit-vintage-engine/src/testFixtures/java/org/junit/vintage/engine/samples/junit4/JUnit4TestCaseWithRunnerWithDuplicateChangingChildDescriptions.java",
                    "uriBaseId": "SRCROOT"
                  },
                  "region": {
                    "startLine": 18,
                    "startColumn": 14,
                    "charOffset": 585,
                    "charLength": 62,
                    "snippet": {
                      "text": "JUnit4TestCaseWithRunnerWithDuplicateChangingChildDescriptions"
                    },
                    "sourceLanguage": "JAVA"
                  },
                  "contextRegion": {
                    "startLine": 16,
                    "startColumn": 1,
                    "charOffset": 485,
                    "charLength": 227,
                    "snippet": {
                      "text": "\n@RunWith(JUnit4TestCaseWithRunnerWithDuplicateChangingChildDescriptions.Runner.class)\npublic class JUnit4TestCaseWithRunnerWithDuplicateChangingChildDescriptions {\n\tpublic static class Runner extends org.junit.runner.Runner {\n"
                    }
                  }
                },
                "logicalLocations": [
                  {
                    "fullyQualifiedName": "junit5.junit-vintage-engine.testFixtures",
                    "kind": "module"
                  }
                ]
              }
            ],
            "partialFingerprints": {
              "equalIndicator/v1": "ed0220038fcfde0464812652675571535094998b096907bbe1b9cc516932a2dc"
            },
            "properties": {
              "ideaSeverity": "WARNING"
            }
          },
          {
            "ruleId": "TestCaseWithNoTestMethods",
            "kind": "fail",
            "level": "warning",
            "message": {
              "text": "Test class 'Runner' has no tests",
              "markdown": "Test class `Runner` has no tests"
            },
            "locations": [
              {
                "physicalLocation": {
                  "artifactLocation": {
                    "uri": "junit-vintage-engine/src/testFixtures/java/org/junit/vintage/engine/samples/junit4/JUnit4TestCaseWithRunnerWithDuplicateChangingChildDescriptions.java",
                    "uriBaseId": "SRCROOT"
                  },
                  "region": {
                    "startLine": 19,
                    "startColumn": 22,
                    "charOffset": 671,
                    "charLength": 6,
                    "snippet": {
                      "text": "Runner"
                    },
                    "sourceLanguage": "JAVA"
                  },
                  "contextRegion": {
                    "startLine": 17,
                    "startColumn": 1,
                    "charOffset": 486,
                    "charLength": 256,
                    "snippet": {
                      "text": "@RunWith(JUnit4TestCaseWithRunnerWithDuplicateChangingChildDescriptions.Runner.class)\npublic class JUnit4TestCaseWithRunnerWithDuplicateChangingChildDescriptions {\n\tpublic static class Runner extends org.junit.runner.Runner {\n\n\t\tprivate Class<?> testClass;"
                    }
                  }
                },
                "logicalLocations": [
                  {
                    "fullyQualifiedName": "junit5.junit-vintage-engine.testFixtures",
                    "kind": "module"
                  }
                ]
              }
            ],
            "partialFingerprints": {
              "equalIndicator/v1": "f93fb62e24d6c74ddd337c1f59db3f79dc3c821895fa8d5379fd4211fd0dbf03"
            },
            "properties": {
              "ideaSeverity": "WARNING"
            }
          }
        ],
        "deviceId": "200820300000000-0000-0000-0000-000000000001",
        "tags": [
          "qodana.sanity.results",
          "qodana.promo.results",
          "deviceId"
        ]
      }
    }
  ]
}